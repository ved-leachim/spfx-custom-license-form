{"version":3,"file":"sudoSync.js","sourceRoot":"","sources":["../src/sudoSync.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,2BAA2B;AAC3B,MAAM,IAAI,GAAiE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3F,2BAA2B;AAC3B,MAAM,OAAO,GAAoC,OAAO,CAAC,SAAS,CAAC,CAAC;AAQpE,SAAgB,WAAW,CAAC,MAAgB;IAC1C,MAAM,UAAU,GAA+B,IAAI,CAAC,MAAM,EAAE;QAC1D,aAAa,EAAE,KAAK;QACpB,MAAM,EAAE,uBAAuB;KAChC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAY,EAAE,EAAE;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAY,EAAE,EAAE;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,IAAI,IAAwB,CAAC;IAC7B,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,QAAgB,EAAE,EAAE;QAC1C,IAAI,GAAG,QAAQ,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,0FAA0F;IAE1F,wDAAwD;IACxD,OAAO,IAAI,KAAK,SAAS,EAAE;QACzB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACpB;IAED,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;AAClC,CAAC;AA7BD,kCA6BC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as child_process from 'child_process';\r\n// eslint-disable-next-line\r\nconst sudo: (args: string[], options: any) => child_process.ChildProcess = require('sudo');\r\n// eslint-disable-next-line\r\nconst deasync: { sleep: (ms: number) => void } = require('deasync');\r\n\r\nexport interface ISudoSyncResult {\r\n  stdout: string[];\r\n  stderr: string[];\r\n  code: number;\r\n}\r\n\r\nexport function runSudoSync(params: string[]): ISudoSyncResult {\r\n  const sudoResult: child_process.ChildProcess = sudo(params, {\r\n    cachePassword: false,\r\n    prompt: 'Enter your password: '\r\n  });\r\n\r\n  const stderr: string[] = [];\r\n  sudoResult.stderr.on('data', (data: Buffer) => {\r\n    stderr.push(data.toString());\r\n  });\r\n\r\n  const stdout: string[] = [];\r\n  sudoResult.stdout.on('data', (data: Buffer) => {\r\n    stdout.push(data.toString());\r\n  });\r\n\r\n  let code: number | undefined;\r\n  sudoResult.on('close', (exitCode: number) => {\r\n    code = exitCode;\r\n  });\r\n\r\n  // Because we're running with sudo, we can't run synchronously, so synchronize by polling.\r\n\r\n  // eslint-disable-next-line no-unmodified-loop-condition\r\n  while (code === undefined) {\r\n    deasync.sleep(100);\r\n  }\r\n\r\n  return { code, stdout, stderr };\r\n}\r\n"]}