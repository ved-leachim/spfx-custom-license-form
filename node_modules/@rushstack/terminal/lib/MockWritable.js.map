{"version":3,"file":"MockWritable.js","sourceRoot":"","sources":["../src/MockWritable.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,yDAAsD;AACtD,oEAA0D;AAE1D;;;;GAIG;AACH,MAAa,YAAa,SAAQ,mCAAgB;IAAlD;;QACkB,WAAM,GAAqB,EAAE,CAAC;IAiBhD,CAAC;IAfW,YAAY,CAAC,KAAqB;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAEM,KAAK;QACV,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACzB,CAAC;IAEM,YAAY;QACjB,OAAO,8BAAU,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEM,kBAAkB;QACvB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,gCAAK,CAAC,KAAE,IAAI,EAAE,8BAAU,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAqB,CAAA,CAAC,CAAC;IACvG,CAAC;CACF;AAlBD,oCAkBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { ITerminalChunk } from './ITerminalChunk';\r\nimport { TerminalWritable } from './TerminalWritable';\r\nimport { AnsiEscape } from '@rushstack/node-core-library';\r\n\r\n/**\r\n * A {@link TerminalWritable} subclass for use by unit tests.\r\n *\r\n * @beta\r\n */\r\nexport class MockWritable extends TerminalWritable {\r\n  public readonly chunks: ITerminalChunk[] = [];\r\n\r\n  protected onWriteChunk(chunk: ITerminalChunk): void {\r\n    this.chunks.push(chunk);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.chunks.length = 0;\r\n  }\r\n\r\n  public getAllOutput(): string {\r\n    return AnsiEscape.formatForTests(this.chunks.map((x) => x.text).join(''));\r\n  }\r\n\r\n  public getFormattedChunks(): ITerminalChunk[] {\r\n    return this.chunks.map((x) => ({ ...x, text: AnsiEscape.formatForTests(x.text) } as ITerminalChunk));\r\n  }\r\n}\r\n"]}