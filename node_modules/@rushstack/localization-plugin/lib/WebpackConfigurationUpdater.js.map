{"version":3,"file":"WebpackConfigurationUpdater.js","sourceRoot":"","sources":["../src/WebpackConfigurationUpdater.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport * as Webpack from 'webpack';\r\nimport * as SetPublicPathPluginPackageType from '@rushstack/set-webpack-public-path-plugin';\r\nimport { NewlineKind } from '@rushstack/node-core-library';\r\nimport * as lodash from 'lodash';\r\n\r\nimport { Constants } from './utilities/Constants';\r\nimport { LocalizationPlugin } from './LocalizationPlugin';\r\nimport { ILocLoaderOptions } from './loaders/LocLoader';\r\nimport { IBaseLoaderOptions } from './loaders/LoaderFactory';\r\n\r\nexport interface IWebpackConfigurationUpdaterOptions {\r\n  pluginInstance: LocalizationPlugin;\r\n  configuration: Webpack.Configuration;\r\n  filesToIgnore: Set<string>;\r\n  localeNameOrPlaceholder: string;\r\n  resxNewlineNormalization: NewlineKind | undefined;\r\n}\r\n\r\nconst FILE_TOKEN_REGEX: RegExp = new RegExp(lodash.escapeRegExp('[file]'));\r\n\r\nexport class WebpackConfigurationUpdater {\r\n  public static amendWebpackConfigurationForMultiLocale(options: IWebpackConfigurationUpdaterOptions): void {\r\n    const loader: string = path.resolve(__dirname, 'loaders', 'LocLoader.js');\r\n    const loaderOptions: ILocLoaderOptions = {\r\n      pluginInstance: options.pluginInstance,\r\n      resxNewlineNormalization: options.resxNewlineNormalization\r\n    };\r\n\r\n    WebpackConfigurationUpdater._addLoadersForLocFiles(options, loader, loaderOptions);\r\n\r\n    WebpackConfigurationUpdater._tryUpdateLocaleTokenInPublicPathPlugin(options);\r\n\r\n    WebpackConfigurationUpdater._tryUpdateSourceMapFilename(options.configuration);\r\n  }\r\n\r\n  public static amendWebpackConfigurationForInPlaceLocFiles(\r\n    options: IWebpackConfigurationUpdaterOptions\r\n  ): void {\r\n    const loader: string = path.resolve(__dirname, 'loaders', 'InPlaceLocFileLoader.js');\r\n    const loaderOptions: IBaseLoaderOptions = {\r\n      resxNewlineNormalization: options.resxNewlineNormalization\r\n    };\r\n\r\n    WebpackConfigurationUpdater._addRulesToConfiguration(options.configuration, [\r\n      {\r\n        test: Constants.LOC_JSON_REGEX,\r\n        use: [\r\n          {\r\n            loader: loader,\r\n            options: loaderOptions\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        test: Constants.RESX_REGEX,\r\n        use: [\r\n          {\r\n            loader: loader,\r\n            options: loaderOptions\r\n          }\r\n        ],\r\n        type: 'json'\r\n      }\r\n    ]);\r\n  }\r\n\r\n  private static _tryUpdateLocaleTokenInPublicPathPlugin(options: IWebpackConfigurationUpdaterOptions): void {\r\n    let setPublicPathPlugin: typeof SetPublicPathPluginPackageType.SetPublicPathPlugin | undefined;\r\n    try {\r\n      const pluginPackage: typeof SetPublicPathPluginPackageType = require('@rushstack/set-webpack-public-path-plugin');\r\n      setPublicPathPlugin = pluginPackage.SetPublicPathPlugin;\r\n    } catch (e) {\r\n      // public path plugin isn't present - ignore\r\n    }\r\n\r\n    if (setPublicPathPlugin && options.configuration.plugins) {\r\n      for (const plugin of options.configuration.plugins) {\r\n        if (plugin instanceof setPublicPathPlugin) {\r\n          if (\r\n            plugin.options &&\r\n            plugin.options.scriptName &&\r\n            plugin.options.scriptName.isTokenized &&\r\n            plugin.options.scriptName.name\r\n          ) {\r\n            plugin.options.scriptName.name = plugin.options.scriptName.name.replace(\r\n              /\\[locale\\]/g,\r\n              options.localeNameOrPlaceholder\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private static _addLoadersForLocFiles(\r\n    options: IWebpackConfigurationUpdaterOptions,\r\n    loader: string,\r\n    loaderOptions: IBaseLoaderOptions\r\n  ): void {\r\n    WebpackConfigurationUpdater._addRulesToConfiguration(options.configuration, [\r\n      {\r\n        test: {\r\n          and: [(filePath: string) => !options.filesToIgnore.has(filePath), Constants.LOC_JSON_REGEX]\r\n        },\r\n        use: [\r\n          {\r\n            loader: loader,\r\n            options: loaderOptions\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        test: {\r\n          and: [(filePath: string) => !options.filesToIgnore.has(filePath), Constants.RESX_REGEX]\r\n        },\r\n        use: [\r\n          {\r\n            loader: loader,\r\n            options: loaderOptions\r\n          }\r\n        ],\r\n        type: 'json'\r\n      }\r\n    ]);\r\n  }\r\n\r\n  private static _addRulesToConfiguration(\r\n    configuration: Webpack.Configuration,\r\n    rules: Webpack.RuleSetRule[]\r\n  ): void {\r\n    if (!configuration.module) {\r\n      configuration.module = {\r\n        rules: []\r\n      };\r\n    }\r\n\r\n    if (!configuration.module.rules) {\r\n      configuration.module.rules = [];\r\n    }\r\n\r\n    configuration.module.rules.push(...rules);\r\n  }\r\n\r\n  private static _tryUpdateSourceMapFilename(configuration: Webpack.Configuration): void {\r\n    if (!configuration.output) {\r\n      configuration.output = {}; // This should never happen\r\n    }\r\n\r\n    if (configuration.output.sourceMapFilename !== undefined) {\r\n      configuration.output.sourceMapFilename = configuration.output.sourceMapFilename.replace(\r\n        FILE_TOKEN_REGEX,\r\n        Constants.NO_LOCALE_SOURCE_MAP_FILENAME_TOKEN\r\n      );\r\n    }\r\n  }\r\n}\r\n"]}