{"version":3,"file":"LocLoader.js","sourceRoot":"","sources":["../../src/loaders/LocLoader.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;AAG3D,oEAAwD;AAIxD,8DAA2D;AAC3D,mDAAoE;AACpE,4DAAyD;AACzD,gFAA6E;AAM7E,kBAAe,6BAAa,CAAC,UAE3B,WAAmB,EACnB,OAAe,EACf,OAA0B;IAE1B,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;IACnC,MAAM,QAAQ,GAAa,IAAI,4BAAQ,CAAC,+CAAsB,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC;IACnG,MAAM,WAAW,GAAsB,6BAAa,CAAC,YAAY,CAAC;QAChE,OAAO;QACP,QAAQ;QACR,QAAQ,EAAE,WAAW;QACrB,wBAAwB,EAAE,OAAO,CAAC,wBAAwB;KAC3D,CAAC,CAAC;IACH,MAAM,EAAE,yBAAyB,EAAE,MAAM,EAAE,GAAG,cAAc,CAAC,iBAAiB,CAC5E,QAAQ,EACR,WAAW,EACX,WAAW,CACZ,CAAC;IACF,KAAK,MAAM,cAAc,IAAI,yBAAyB,EAAE;QACtD,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;KACjC;IAED,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;QAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACvB;IAED,MAAM,YAAY,GAAqC,EAAE,CAAC;IAC1D,wCAAwC;IACxC,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;QACpC,MAAM,SAAS,GAAW,GAAG,WAAW,IAAI,UAAU,EAAE,CAAC;QACzD,IAAI,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAC5C,YAAY,CAAC,UAAU,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC,KAAK,CAAC;SAC5E;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,oDAAoD,SAAS,GAAG,CAAC,CAAC;SACnF;KACF;IAED,2BAAY,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAE5C,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { loader } from 'webpack';\r\nimport { Terminal } from '@rushstack/node-core-library';\r\n\r\nimport { LocalizationPlugin } from '../LocalizationPlugin';\r\nimport { ILocalizationFile } from '../interfaces';\r\nimport { LocFileParser } from '../utilities/LocFileParser';\r\nimport { loaderFactory, IBaseLoaderOptions } from './LoaderFactory';\r\nimport { EntityMarker } from '../utilities/EntityMarker';\r\nimport { LoaderTerminalProvider } from '../utilities/LoaderTerminalProvider';\r\n\r\nexport interface ILocLoaderOptions extends IBaseLoaderOptions {\r\n  pluginInstance: LocalizationPlugin;\r\n}\r\n\r\nexport default loaderFactory(function (\r\n  this: loader.LoaderContext,\r\n  locFilePath: string,\r\n  content: string,\r\n  options: ILocLoaderOptions\r\n) {\r\n  const { pluginInstance } = options;\r\n  const terminal: Terminal = new Terminal(LoaderTerminalProvider.getTerminalProviderForLoader(this));\r\n  const locFileData: ILocalizationFile = LocFileParser.parseLocFile({\r\n    content,\r\n    terminal,\r\n    filePath: locFilePath,\r\n    resxNewlineNormalization: options.resxNewlineNormalization\r\n  });\r\n  const { additionalLoadedFilePaths, errors } = pluginInstance.addDefaultLocFile(\r\n    terminal,\r\n    locFilePath,\r\n    locFileData\r\n  );\r\n  for (const additionalFile of additionalLoadedFilePaths) {\r\n    this.dependency(additionalFile);\r\n  }\r\n\r\n  for (const error of errors) {\r\n    this.emitError(error);\r\n  }\r\n\r\n  const resultObject: { [stringName: string]: string } = {};\r\n  // eslint-disable-next-line guard-for-in\r\n  for (const stringName in locFileData) {\r\n    const stringKey: string = `${locFilePath}?${stringName}`;\r\n    if (pluginInstance.stringKeys.has(stringKey)) {\r\n      resultObject[stringName] = pluginInstance.stringKeys.get(stringKey)!.value;\r\n    } else {\r\n      throw new Error(`Unexpected - missing placeholder for string key \"${stringKey}\"`);\r\n    }\r\n  }\r\n\r\n  EntityMarker.markEntity(this._module, true);\r\n\r\n  return resultObject;\r\n});\r\n"]}