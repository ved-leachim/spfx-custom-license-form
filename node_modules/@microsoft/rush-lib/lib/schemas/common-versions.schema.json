{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Rush common-versions.json config file",
  "description": "For use with the Rush tool, this file manages dependency versions that affect all projects in the repo. See http://rushjs.io for details.",

  "type": "object",
  "properties": {
    "$schema": {
      "description": "Part of the JSON Schema standard, this optional keyword declares the URL of the schema that the file conforms to. Editors may download the schema and use it to perform syntax highlighting.",
      "type": "string"
    },
    "preferredVersions": {
      "description": "A table that specifies a \"preferred version\" for a given NPM package.  This feature is typically used to hold back an indirect dependency to a specific older version, or to reduce duplication of indirect dependencies. The \"preferredVersions\" value can be any SemVer range specifier (e.g. \"~1.2.3\").  Rush injects these values into the \"dependencies\" field of the top-level common/temp/package.json, which influences how the package manager will calculate versions.  The specific effect depends on your package manager.  Generally it will have no effect on an incompatible or already constrained SemVer range.  If you are using PNPM, similar effects can be achieved using the pnpmfile.js hook.  See the Rush documentation for more details.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "implicitlyPreferredVersions": {
      "description": "When set to true, for all projects in the repo, all dependencies will be automatically added as preferredVersions, except in cases where different projects specify different version ranges for a given dependency.  For older package managers, this tended to reduce duplication of indirect dependencies.  However, it can sometimes cause trouble for indirect dependencies with incompatible peerDependencies ranges.",
      "type": "boolean"
    },
    "xstitchPreferredVersions": {
      "description": "A table of specifies preferred versions maintained by the XStitch tool. See the Rush documentation for details.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "allowedAlternativeVersions": {
      "description": "The \"rush check\" command can be used to enforce that every project in the repo must specify the same SemVer range for a given dependency.  However, sometimes exceptions are needed.  The allowedAlternativeVersions table allows you to list other SemVer ranges that will be accepted by \"rush check\" for a given dependency. Note that the normal version range (as inferred by looking at all projects in the repo) should NOT be included in this list.",
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    }
  },
  "additionalProperties": false
}
