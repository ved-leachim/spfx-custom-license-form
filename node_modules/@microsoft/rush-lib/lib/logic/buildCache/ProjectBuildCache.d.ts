import { Terminal } from '@rushstack/node-core-library';
import { PackageChangeAnalyzer } from '../PackageChangeAnalyzer';
import { RushProjectConfiguration } from '../../api/RushProjectConfiguration';
import { BuildCacheConfiguration } from '../../api/BuildCacheConfiguration';
interface IProjectBuildCacheOptions {
    buildCacheConfiguration: BuildCacheConfiguration;
    projectConfiguration: RushProjectConfiguration;
    command: string;
    trackedProjectFiles: string[] | undefined;
    packageChangeAnalyzer: PackageChangeAnalyzer;
    terminal: Terminal;
}
export declare class ProjectBuildCache {
    private readonly _project;
    private readonly _localBuildCacheProvider;
    private readonly _cloudBuildCacheProvider;
    private readonly _projectOutputFolderNames;
    private readonly _cacheId;
    private constructor();
    static tryGetProjectBuildCache(options: IProjectBuildCacheOptions): ProjectBuildCache | undefined;
    private static _validateProject;
    tryRestoreFromCacheAsync(terminal: Terminal): Promise<boolean>;
    trySetCacheEntryAsync(terminal: Terminal): Promise<boolean>;
    private _readStreamToBufferAsync;
    private static _getCacheId;
}
export {};
//# sourceMappingURL=ProjectBuildCache.d.ts.map