{"version":3,"file":"BaseBuilder.js","sourceRoot":"","sources":["../../../src/logic/taskRunner/BaseBuilder.ts"],"names":[],"mappings":";AAAC,4FAA4F;AAC7F,2DAA2D;;;AAa3D;;;;GAIG;AACH,MAAsB,WAAW;CAqBhC;AArBD,kCAqBC","sourcesContent":["ï»¿// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { StdioSummarizer } from '@rushstack/terminal';\r\nimport { CollatedWriter } from '@rushstack/stream-collator';\r\n\r\nimport { TaskStatus } from './TaskStatus';\r\n\r\nexport interface IBuilderContext {\r\n  collatedWriter: CollatedWriter;\r\n  stdioSummarizer: StdioSummarizer;\r\n  quietMode: boolean;\r\n}\r\n\r\n/**\r\n * The `Task` class is a node in the dependency graph of work that needs to be scheduled by the `TaskRunner`.\r\n * Each `Task` has a `BaseBuilder` member, whose subclass manages the actual operations for building a single\r\n * project.\r\n */\r\nexport abstract class BaseBuilder {\r\n  /**\r\n   * Name of the task definition.\r\n   */\r\n  abstract readonly name: string;\r\n\r\n  /**\r\n   * This flag determines if an incremental build is allowed for the task.\r\n   */\r\n  abstract isIncrementalBuildAllowed: boolean;\r\n\r\n  /**\r\n   * Assigned by execute().  True if the build script was an empty string.  Operationally an empty string is\r\n   * like a shell command that succeeds instantly, but e.g. it would be odd to report build time statistics for it.\r\n   */\r\n  abstract hadEmptyScript: boolean;\r\n\r\n  /**\r\n   * Method to be executed for the task.\r\n   */\r\n  abstract async executeAsync(context: IBuilderContext): Promise<TaskStatus>;\r\n}\r\n"]}