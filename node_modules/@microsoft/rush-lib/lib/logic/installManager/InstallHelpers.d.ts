/// <reference types="node" />
import { RushConfiguration } from '../../api/RushConfiguration';
import { RushGlobalFolder } from '../../api/RushGlobalFolder';
export declare class InstallHelpers {
    /**
     * Returns a map containing all preferred versions for a Rush project.
     * Returns a map: dependency name --> version specifier
     */
    static collectPreferredVersions(rushConfiguration: RushConfiguration, options?: {
        explicitPreferredVersions?: Map<string, string>;
        variant?: string | undefined;
    }): Map<string, string>;
    /**
     * Returns a map of all direct dependencies that only have a single semantic version specifier.
     * Returns a map: dependency name --> version specifier
     */
    static collectImplicitlyPreferredVersions(rushConfiguration: RushConfiguration, options?: {
        variant?: string | undefined;
    }): Map<string, string>;
    static generateCommonPackageJson(rushConfiguration: RushConfiguration, dependencies?: Map<string, string>): void;
    static getPackageManagerEnvironment(rushConfiguration: RushConfiguration, options?: {
        debug?: boolean;
    }): NodeJS.ProcessEnv;
    /**
     * If the "(p)npm-local" symlink hasn't been set up yet, this creates it, installing the
     * specified (P)npm version in the user's home directory if needed.
     */
    static ensureLocalPackageManager(rushConfiguration: RushConfiguration, rushGlobalFolder: RushGlobalFolder, maxInstallAttempts: number): Promise<void>;
    private static _collectVersionsForDependencies;
    private static _updateVersionsForDependencies;
    private static _mergeEnvironmentVariables;
}
//# sourceMappingURL=InstallHelpers.d.ts.map