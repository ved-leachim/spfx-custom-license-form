import { RushConfigurationProject } from '../api/RushConfigurationProject';
import { Git } from './Git';
export declare class PublishGit {
    private readonly _targetBranch;
    private readonly _gitPath;
    constructor(git: Git, targetBranch: string | undefined);
    checkout(branchName: string | undefined, createBranch?: boolean): void;
    merge(branchName: string): void;
    deleteBranch(branchName: string | undefined, hasRemote?: boolean): void;
    pull(): void;
    fetch(): void;
    addChanges(pathspec?: string, workingDirectory?: string): void;
    addTag(shouldExecute: boolean, packageName: string, packageVersion: string, commitId: string | undefined): void;
    hasTag(packageConfig: RushConfigurationProject): boolean;
    commit(commitMessage: string): void;
    push(branchName: string | undefined): void;
}
//# sourceMappingURL=PublishGit.d.ts.map