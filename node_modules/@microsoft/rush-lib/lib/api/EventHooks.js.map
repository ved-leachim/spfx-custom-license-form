{"version":3,"file":"EventHooks.js","sourceRoot":"","sources":["../../src/api/EventHooks.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAG3D,oEAAoD;AAEpD;;;GAGG;AACH,IAAY,KAiBX;AAjBD,WAAY,KAAK;IACf;;OAEG;IACH,qDAAkB,CAAA;IAClB;;OAEG;IACH,uDAAmB,CAAA;IACnB;;OAEG;IACH,iDAAgB,CAAA;IAChB;;OAEG;IACH,mDAAiB,CAAA;AACnB,CAAC,EAjBW,KAAK,GAAL,aAAK,KAAL,aAAK,QAiBhB;AAED;;;;;GAKG;AACH,MAAa,UAAU;IAGrB;;OAEG;IACH,YAAmB,cAA+B;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAmB,CAAC;QACzC,KAAK,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YAC/D,MAAM,SAAS,GAAsB,wBAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACxE,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;aACnD;SACF;IACH,CAAC;IAED;;;OAGG;IACI,GAAG,CAAC,KAAY;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;CACF;AAvBD,gCAuBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { IEventHooksJson } from './RushConfiguration';\r\nimport { Enum } from '@rushstack/node-core-library';\r\n\r\n/**\r\n * Events happen during Rush runs.\r\n * @beta\r\n */\r\nexport enum Event {\r\n  /**\r\n   * Pre Rush install event\r\n   */\r\n  preRushInstall = 1,\r\n  /**\r\n   * Post Rush install event\r\n   */\r\n  postRushInstall = 2,\r\n  /**\r\n   * Pre Rush build event\r\n   */\r\n  preRushBuild = 3,\r\n  /**\r\n   * Post Rush build event\r\n   */\r\n  postRushBuild = 4\r\n}\r\n\r\n/**\r\n * This class represents Rush event hooks configured for this repo.\r\n * Hooks are customized script actions that Rush executes when specific events occur.\r\n * The actions are expressed as a command-line that is executed using the operating system shell.\r\n * @beta\r\n */\r\nexport class EventHooks {\r\n  private _hooks: Map<Event, string[]>;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  public constructor(eventHooksJson: IEventHooksJson) {\r\n    this._hooks = new Map<Event, string[]>();\r\n    for (const [name, eventHooks] of Object.entries(eventHooksJson)) {\r\n      const eventName: Event | undefined = Enum.tryGetValueByKey(Event, name);\r\n      if (eventName) {\r\n        this._hooks.set(eventName, [...eventHooks] || []);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return all the scripts associated with the specified event.\r\n   * @param event - Rush event\r\n   */\r\n  public get(event: Event): string[] {\r\n    return this._hooks.get(event) || [];\r\n  }\r\n}\r\n"]}