{"version":3,"file":"RushGlobalFolder.js","sourceRoot":"","sources":["../../src/api/RushGlobalFolder.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,sDAAmD;AACnD,yEAAsE;AAEtE;;;;GAIG;AACH,MAAa,gBAAgB;IAiC3B;QACE,oGAAoG;QACpG,mEAAmE;QACnE,MAAM,wBAAwB,GAEd,mDAAwB,CAAC,4BAA4B,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnF,IAAI,wBAAwB,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,iBAAiB,GAAG,wBAAwB,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAS,CAAC,aAAa,EAAE,EAAE,OAAO,CAAC,CAAC;SACxE;QAED,MAAM,qBAAqB,GAAW,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC;YAC7E,CAAC,CAAC,OAAO,CAAC,OAAO;YACjB,CAAC,CAAC,iBAAiB,CAAC;QACtB,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAQ,qBAAqB,EAAE,CAAC,CAAC;IACxG,CAAC;IA7CD;;;;;;;;;;;;;;;;OAgBG;IACH,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,IAAW,gBAAgB;QACzB,OAAO,IAAI,CAAC,2BAA2B,CAAC;IAC1C,CAAC;CAmBF;AAlDD,4CAkDC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { Utilities } from '../utilities/Utilities';\r\nimport { EnvironmentConfiguration } from './EnvironmentConfiguration';\r\n\r\n/**\r\n * This class provides global folders that are used for rush's internal install locations.\r\n *\r\n * @internal\r\n */\r\nexport class RushGlobalFolder {\r\n  private _rushGlobalFolder: string;\r\n  private _rushNodeSpecificUserFolder: string;\r\n\r\n  /**\r\n   * The global folder where Rush stores temporary files.\r\n   *\r\n   * @remarks\r\n   *\r\n   * Most of the temporary files created by Rush are stored separately for each monorepo working folder,\r\n   * to avoid issues of concurrency and compatibility between tool versions.  However, a small set\r\n   * of files (e.g. installations of the `@microsoft/rush-lib` engine and the package manager) are stored\r\n   * in a global folder to speed up installations.  The default location is `~/.rush` on POSIX-like\r\n   * operating systems or `C:\\Users\\YourName` on Windows.\r\n   *\r\n   * You can use the {@link EnvironmentVariableNames.RUSH_GLOBAL_FOLDER} environment  variable to specify\r\n   * a different folder path.  This is useful for example if a Windows group policy forbids executing scripts\r\n   * installed in a user's home directory.\r\n   *\r\n   * POSIX is a registered trademark of the Institute of Electrical and Electronic Engineers, Inc.\r\n   */\r\n  public get path(): string {\r\n    return this._rushGlobalFolder;\r\n  }\r\n\r\n  /**\r\n   * The absolute path to Rush's storage in the home directory for the current user and node version.\r\n   * On Windows, it would be something like `C:\\Users\\YourName\\.rush\\node-v3.4.5`.\r\n   */\r\n  public get nodeSpecificPath(): string {\r\n    return this._rushNodeSpecificUserFolder;\r\n  }\r\n\r\n  public constructor() {\r\n    // Because RushGlobalFolder is used by the front-end VersionSelector before EnvironmentConfiguration\r\n    // is initialized, we need to read it using a special internal API.\r\n    const rushGlobalFolderOverride:\r\n      | string\r\n      | undefined = EnvironmentConfiguration._getRushGlobalFolderOverride(process.env);\r\n    if (rushGlobalFolderOverride !== undefined) {\r\n      this._rushGlobalFolder = rushGlobalFolderOverride;\r\n    } else {\r\n      this._rushGlobalFolder = path.join(Utilities.getHomeFolder(), '.rush');\r\n    }\r\n\r\n    const normalizedNodeVersion: string = process.version.match(/^[a-z0-9\\-\\.]+$/i)\r\n      ? process.version\r\n      : 'unknown-version';\r\n    this._rushNodeSpecificUserFolder = path.join(this._rushGlobalFolder, `node-${normalizedNodeVersion}`);\r\n  }\r\n}\r\n"]}