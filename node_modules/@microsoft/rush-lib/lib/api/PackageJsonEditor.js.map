{"version":3,"file":"PackageJsonEditor.js","sourceRoot":"","sources":["../../src/api/PackageJsonEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as semver from 'semver';\r\n\r\nimport { IPackageJson, JsonFile, Sort } from '@rushstack/node-core-library';\r\n\r\n/**\r\n * @beta\r\n */\r\nexport const enum DependencyType {\r\n  Regular = 'dependencies',\r\n  Dev = 'devDependencies',\r\n  Optional = 'optionalDependencies',\r\n  Peer = 'peerDependencies'\r\n}\r\n\r\n/**\r\n * @beta\r\n */\r\nexport class PackageJsonDependency {\r\n  private _type: DependencyType;\r\n  private _name: string;\r\n  private _version: string;\r\n  private _onChange: () => void;\r\n\r\n  public constructor(name: string, version: string, type: DependencyType, onChange: () => void) {\r\n    this._name = name;\r\n    this._version = version;\r\n    this._type = type;\r\n    this._onChange = onChange;\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public get version(): string {\r\n    return this._version;\r\n  }\r\n\r\n  public setVersion(newVersion: string): void {\r\n    if (!semver.valid(newVersion) && !semver.validRange(newVersion)) {\r\n      throw new Error(`Cannot set version to invalid value: \"${newVersion}\"`);\r\n    }\r\n    this._version = newVersion;\r\n    this._onChange();\r\n  }\r\n\r\n  public get dependencyType(): DependencyType {\r\n    return this._type;\r\n  }\r\n}\r\n\r\n/**\r\n * @beta\r\n */\r\nexport class PackageJsonEditor {\r\n  private readonly _filePath: string;\r\n  private readonly _data: IPackageJson;\r\n  private readonly _dependencies: Map<string, PackageJsonDependency>;\r\n\r\n  // NOTE: The \"devDependencies\" section is tracked separately because sometimes people\r\n  // will specify a specific version for development, while *also* specifying a broader\r\n  // SemVer range in one of the other fields for consumers.  Thus \"dependencies\", \"optionalDependencies\",\r\n  // and \"peerDependencies\" are mutually exclusive, but \"devDependencies\" is not.\r\n  private readonly _devDependencies: Map<string, PackageJsonDependency>;\r\n  private _modified: boolean;\r\n\r\n  private constructor(filepath: string, data: IPackageJson) {\r\n    this._filePath = filepath;\r\n    this._data = data;\r\n    this._modified = false;\r\n\r\n    this._dependencies = new Map<string, PackageJsonDependency>();\r\n    this._devDependencies = new Map<string, PackageJsonDependency>();\r\n\r\n    const dependencies: { [key: string]: string } = data.dependencies || {};\r\n    const optionalDependencies: { [key: string]: string } = data.optionalDependencies || {};\r\n    const peerDependencies: { [key: string]: string } = data.peerDependencies || {};\r\n\r\n    const devDependencies: { [key: string]: string } = data.devDependencies || {};\r\n\r\n    const _onChange: () => void = this._onChange.bind(this);\r\n\r\n    try {\r\n      Object.keys(dependencies || {}).forEach((packageName: string) => {\r\n        if (Object.prototype.hasOwnProperty.call(optionalDependencies, packageName)) {\r\n          throw new Error(\r\n            `The package \"${packageName}\" cannot be listed in both ` +\r\n              `\"dependencies\" and \"optionalDependencies\"`\r\n          );\r\n        }\r\n        if (Object.prototype.hasOwnProperty.call(peerDependencies, packageName)) {\r\n          throw new Error(\r\n            `The package \"${packageName}\" cannot be listed in both \"dependencies\" and \"peerDependencies\"`\r\n          );\r\n        }\r\n\r\n        this._dependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(packageName, dependencies[packageName], DependencyType.Regular, _onChange)\r\n        );\r\n      });\r\n\r\n      Object.keys(optionalDependencies || {}).forEach((packageName: string) => {\r\n        if (Object.prototype.hasOwnProperty.call(peerDependencies, packageName)) {\r\n          throw new Error(\r\n            `The package \"${packageName}\" cannot be listed in both ` +\r\n              `\"optionalDependencies\" and \"peerDependencies\"`\r\n          );\r\n        }\r\n        this._dependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(\r\n            packageName,\r\n            optionalDependencies[packageName],\r\n            DependencyType.Optional,\r\n            _onChange\r\n          )\r\n        );\r\n      });\r\n\r\n      Object.keys(peerDependencies || {}).forEach((packageName: string) => {\r\n        this._dependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(\r\n            packageName,\r\n            peerDependencies[packageName],\r\n            DependencyType.Peer,\r\n            _onChange\r\n          )\r\n        );\r\n      });\r\n\r\n      Object.keys(devDependencies || {}).forEach((packageName: string) => {\r\n        this._devDependencies.set(\r\n          packageName,\r\n          new PackageJsonDependency(packageName, devDependencies[packageName], DependencyType.Dev, _onChange)\r\n        );\r\n      });\r\n\r\n      Sort.sortMapKeys(this._dependencies);\r\n      Sort.sortMapKeys(this._devDependencies);\r\n    } catch (e) {\r\n      throw new Error(`Error loading \"${filepath}\": ${e.message}`);\r\n    }\r\n  }\r\n\r\n  public static load(filePath: string): PackageJsonEditor {\r\n    return new PackageJsonEditor(filePath, JsonFile.load(filePath));\r\n  }\r\n\r\n  public static fromObject(object: IPackageJson, filename: string): PackageJsonEditor {\r\n    return new PackageJsonEditor(filename, object);\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._data.name;\r\n  }\r\n\r\n  public get version(): string {\r\n    return this._data.version;\r\n  }\r\n\r\n  public get filePath(): string {\r\n    return this._filePath;\r\n  }\r\n\r\n  /**\r\n   * The list of dependencies of type DependencyType.Regular, DependencyType.Optional, or DependencyType.Peer.\r\n   */\r\n  public get dependencyList(): ReadonlyArray<PackageJsonDependency> {\r\n    return [...this._dependencies.values()];\r\n  }\r\n\r\n  /**\r\n   * The list of dependencies of type DependencyType.Dev.\r\n   */\r\n  public get devDependencyList(): ReadonlyArray<PackageJsonDependency> {\r\n    return [...this._devDependencies.values()];\r\n  }\r\n\r\n  public tryGetDependency(packageName: string): PackageJsonDependency | undefined {\r\n    return this._dependencies.get(packageName);\r\n  }\r\n\r\n  public tryGetDevDependency(packageName: string): PackageJsonDependency | undefined {\r\n    return this._devDependencies.get(packageName);\r\n  }\r\n\r\n  public addOrUpdateDependency(\r\n    packageName: string,\r\n    newVersion: string,\r\n    dependencyType: DependencyType\r\n  ): void {\r\n    const dependency: PackageJsonDependency = new PackageJsonDependency(\r\n      packageName,\r\n      newVersion,\r\n      dependencyType,\r\n      this._onChange.bind(this)\r\n    );\r\n\r\n    // Rush collapses everything that isn't a devDependency into the dependencies\r\n    // field, so we need to set the value dependening on dependency type\r\n    if (\r\n      dependencyType === DependencyType.Regular ||\r\n      dependencyType === DependencyType.Optional ||\r\n      dependencyType === DependencyType.Peer\r\n    ) {\r\n      this._dependencies.set(packageName, dependency);\r\n    } else {\r\n      this._devDependencies.set(packageName, dependency);\r\n    }\r\n    this._modified = true;\r\n  }\r\n\r\n  public saveIfModified(): boolean {\r\n    if (this._modified) {\r\n      JsonFile.save(this._normalize(), this._filePath, { updateExistingFile: true });\r\n      this._modified = false;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _onChange(): void {\r\n    this._modified = true;\r\n  }\r\n\r\n  private _normalize(): IPackageJson {\r\n    delete this._data.dependencies;\r\n    delete this._data.optionalDependencies;\r\n    delete this._data.peerDependencies;\r\n    delete this._data.devDependencies;\r\n\r\n    const keys: string[] = [...this._dependencies.keys()].sort();\r\n\r\n    for (const packageName of keys) {\r\n      const dependency: PackageJsonDependency = this._dependencies.get(packageName)!;\r\n\r\n      if (dependency.dependencyType === DependencyType.Regular) {\r\n        if (!this._data.dependencies) {\r\n          this._data.dependencies = {};\r\n        }\r\n        this._data.dependencies[dependency.name] = dependency.version;\r\n      }\r\n\r\n      if (dependency.dependencyType === DependencyType.Optional) {\r\n        if (!this._data.optionalDependencies) {\r\n          this._data.optionalDependencies = {};\r\n        }\r\n        this._data.optionalDependencies[dependency.name] = dependency.version;\r\n      }\r\n\r\n      if (dependency.dependencyType === DependencyType.Peer) {\r\n        if (!this._data.peerDependencies) {\r\n          this._data.peerDependencies = {};\r\n        }\r\n        this._data.peerDependencies[dependency.name] = dependency.version;\r\n      }\r\n    }\r\n\r\n    const devDependenciesKeys: string[] = [...this._devDependencies.keys()].sort();\r\n\r\n    for (const packageName of devDependenciesKeys) {\r\n      const dependency: PackageJsonDependency = this._devDependencies.get(packageName)!;\r\n\r\n      if (!this._data.devDependencies) {\r\n        this._data.devDependencies = {};\r\n      }\r\n      this._data.devDependencies[dependency.name] = dependency.version;\r\n    }\r\n\r\n    return this._data;\r\n  }\r\n}\r\n"]}