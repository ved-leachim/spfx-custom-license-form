{"version":3,"file":"BuildCacheConfiguration.js","sourceRoot":"","sources":["../../src/api/BuildCacheConfiguration.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAMsC;AAEtC,uGAG4D;AAE5D,mGAAgG;AAChG,0DAAuD;AAEvD,mEAAgE;AAChE,mEAAyF;AAkDzF;;;;GAIG;AACH,MAAa,uBAAuB;IASlC,YAAoB,OAAwC;QAC1D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,2DAA4B,CAAC;YACzD,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;YACpD,iBAAiB,EAAE,OAAO,CAAC,iBAAiB;SAC7C,CAAC,CAAC;QAEH,MAAM,EAAE,cAAc,EAAE,GAAG,OAAO,CAAC;QACnC,QAAQ,cAAc,CAAC,aAAa,EAAE;YACpC,KAAK,YAAY,CAAC,CAAC;gBACjB,yCAAyC;gBACzC,MAAM;aACP;YAED,KAAK,oBAAoB,CAAC,CAAC;gBACzB,MAAM,0BAA0B,GAAoC,cAAiD,CAAC;gBACtH,MAAM,6BAA6B,GACjC,0BAA0B,CAAC,6BAA6B,CAAC;gBAC3D,IAAI,CAAC,kBAAkB,GAAG,IAAI,+DAA8B,CAAC;oBAC3D,kBAAkB,EAAE,6BAA6B,CAAC,kBAAkB;oBACpE,oBAAoB,EAAE,6BAA6B,CAAC,oBAAoB;oBACxE,gBAAgB,EAAE,6BAA6B,CAAC,gBAAgB;oBAChE,UAAU,EAAE,6BAA6B,CAAC,UAAU;oBACpD,mBAAmB,EAAE,CAAC,CAAC,6BAA6B,CAAC,mBAAmB;iBACzE,CAAC,CAAC;gBACH,MAAM;aACP;YAED,OAAO,CAAC,CAAC;gBACP,MAAM,IAAI,KAAK,CAAC,8BAA8B,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC;aAC/E;SACF;IACH,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAC1C,QAAkB,EAClB,iBAAoC;QAEpC,MAAM,YAAY,GAAW,uBAAuB,CAAC,2BAA2B,CAAC,iBAAiB,CAAC,CAAC;QACpG,IAAI,8BAAU,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE;YACnC,MAAM,cAAc,GAAoB,MAAM,4BAAQ,CAAC,oBAAoB,CACzE,YAAY,EACZ,uBAAuB,CAAC,WAAW,CACpC,CAAC;YACF,MAAM,qBAAqB,GAA0B,MAAM,6CAAqB,CAAC,eAAe,EAAE,CAAC;YAEnG,IAAI,eAAwC,CAAC;YAC7C,IAAI;gBACF,eAAe,GAAG,2BAAY,CAAC,YAAY,CAAC,cAAc,CAAC,qBAAqB,CAAC,CAAC;aACnF;YAAC,OAAO,CAAC,EAAE;gBACV,QAAQ,CAAC,cAAc,CACrB,2CAA2C,cAAc,CAAC,qBAAqB,MAAM,CAAC,EAAE,CACzF,CAAC;gBACF,MAAM,IAAI,wCAAoB,EAAE,CAAC;aAClC;YAED,OAAO,IAAI,uBAAuB,CAAC;gBACjC,cAAc;gBACd,eAAe;gBACf,iBAAiB;gBACjB,qBAAqB;aACtB,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IAEM,MAAM,CAAC,2BAA2B,CAAC,iBAAoC;QAC5E,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,6BAAa,CAAC,kBAAkB,CAAC,CAAC;IAClG,CAAC;;AAlFH,0DAmFC;AAlFgB,mCAAW,GAAe,8BAAU,CAAC,QAAQ,CAC1D,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC,CACjE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport {\r\n  JsonFile,\r\n  JsonSchema,\r\n  FileSystem,\r\n  AlreadyReportedError,\r\n  Terminal\r\n} from '@rushstack/node-core-library';\r\n\r\nimport {\r\n  AzureEnvironmentNames,\r\n  AzureStorageBuildCacheProvider\r\n} from '../logic/buildCache/AzureStorageBuildCacheProvider';\r\nimport { RushConfiguration } from './RushConfiguration';\r\nimport { FileSystemBuildCacheProvider } from '../logic/buildCache/FileSystemBuildCacheProvider';\r\nimport { RushConstants } from '../logic/RushConstants';\r\nimport { CloudBuildCacheProviderBase } from '../logic/buildCache/CloudBuildCacheProviderBase';\r\nimport { RushUserConfiguration } from './RushUserConfiguration';\r\nimport { CacheEntryId, GetCacheEntryIdFunction } from '../logic/buildCache/CacheEntryId';\r\n\r\n/**\r\n * Describes the file structure for the \"common/config/rush/build-cache.json\" config file.\r\n */\r\ninterface IBuildCacheJson {\r\n  cacheProvider: 'azure-blob-storage' | 'local-only';\r\n  cacheEntryNamePattern?: string;\r\n}\r\n\r\ninterface IAzureBlobStorageBuildCacheJson extends IBuildCacheJson {\r\n  cacheProvider: 'azure-blob-storage';\r\n\r\n  azureBlobStorageConfiguration: IAzureStorageConfigurationJson;\r\n}\r\n\r\ninterface IAzureStorageConfigurationJson {\r\n  /**\r\n   * The name of the the Azure storage account to use for build cache.\r\n   */\r\n  storageAccountName: string;\r\n\r\n  /**\r\n   * The name of the container in the Azure storage account to use for build cache.\r\n   */\r\n  storageContainerName: string;\r\n\r\n  /**\r\n   * The Azure environment the storage account exists in. Defaults to AzureCloud.\r\n   */\r\n  azureEnvironment?: AzureEnvironmentNames;\r\n\r\n  /**\r\n   * An optional prefix for cache item blob names.\r\n   */\r\n  blobPrefix?: string;\r\n\r\n  /**\r\n   * If set to true, allow writing to the cache. Defaults to false.\r\n   */\r\n  isCacheWriteAllowed?: boolean;\r\n}\r\n\r\ninterface IBuildCacheConfigurationOptions {\r\n  buildCacheJson: IBuildCacheJson;\r\n  getCacheEntryId: GetCacheEntryIdFunction;\r\n  rushConfiguration: RushConfiguration;\r\n  rushUserConfiguration: RushUserConfiguration;\r\n}\r\n\r\n/**\r\n * Use this class to load and save the \"common/config/rush/build-cache.json\" config file.\r\n * This file provides configuration options for cached project build output.\r\n * @public\r\n */\r\nexport class BuildCacheConfiguration {\r\n  private static _jsonSchema: JsonSchema = JsonSchema.fromFile(\r\n    path.join(__dirname, '..', 'schemas', 'build-cache.schema.json')\r\n  );\r\n\r\n  public readonly getCacheEntryId: GetCacheEntryIdFunction;\r\n  public readonly localCacheProvider: FileSystemBuildCacheProvider;\r\n  public readonly cloudCacheProvider: CloudBuildCacheProviderBase | undefined;\r\n\r\n  private constructor(options: IBuildCacheConfigurationOptions) {\r\n    this.getCacheEntryId = options.getCacheEntryId;\r\n    this.localCacheProvider = new FileSystemBuildCacheProvider({\r\n      rushUserConfiguration: options.rushUserConfiguration,\r\n      rushConfiguration: options.rushConfiguration\r\n    });\r\n\r\n    const { buildCacheJson } = options;\r\n    switch (buildCacheJson.cacheProvider) {\r\n      case 'local-only': {\r\n        // Don't configure a cloud cache provider\r\n        break;\r\n      }\r\n\r\n      case 'azure-blob-storage': {\r\n        const azureStorageBuildCacheJson: IAzureBlobStorageBuildCacheJson = buildCacheJson as IAzureBlobStorageBuildCacheJson;\r\n        const azureStorageConfigurationJson: IAzureStorageConfigurationJson =\r\n          azureStorageBuildCacheJson.azureBlobStorageConfiguration;\r\n        this.cloudCacheProvider = new AzureStorageBuildCacheProvider({\r\n          storageAccountName: azureStorageConfigurationJson.storageAccountName,\r\n          storageContainerName: azureStorageConfigurationJson.storageContainerName,\r\n          azureEnvironment: azureStorageConfigurationJson.azureEnvironment,\r\n          blobPrefix: azureStorageConfigurationJson.blobPrefix,\r\n          isCacheWriteAllowed: !!azureStorageConfigurationJson.isCacheWriteAllowed\r\n        });\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        throw new Error(`Unexpected cache provider: ${buildCacheJson.cacheProvider}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads the build-cache.json data from the repo's default file path (/common/config/rush/build-cache.json).\r\n   * If the file has not been created yet, then undefined is returned.\r\n   */\r\n  public static async loadFromDefaultPathAsync(\r\n    terminal: Terminal,\r\n    rushConfiguration: RushConfiguration\r\n  ): Promise<BuildCacheConfiguration | undefined> {\r\n    const jsonFilePath: string = BuildCacheConfiguration.getBuildCacheConfigFilePath(rushConfiguration);\r\n    if (FileSystem.exists(jsonFilePath)) {\r\n      const buildCacheJson: IBuildCacheJson = await JsonFile.loadAndValidateAsync(\r\n        jsonFilePath,\r\n        BuildCacheConfiguration._jsonSchema\r\n      );\r\n      const rushUserConfiguration: RushUserConfiguration = await RushUserConfiguration.initializeAsync();\r\n\r\n      let getCacheEntryId: GetCacheEntryIdFunction;\r\n      try {\r\n        getCacheEntryId = CacheEntryId.parsePattern(buildCacheJson.cacheEntryNamePattern);\r\n      } catch (e) {\r\n        terminal.writeErrorLine(\r\n          `Error parsing cache entry name pattern \"${buildCacheJson.cacheEntryNamePattern}\": ${e}`\r\n        );\r\n        throw new AlreadyReportedError();\r\n      }\r\n\r\n      return new BuildCacheConfiguration({\r\n        buildCacheJson,\r\n        getCacheEntryId,\r\n        rushConfiguration,\r\n        rushUserConfiguration\r\n      });\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  public static getBuildCacheConfigFilePath(rushConfiguration: RushConfiguration): string {\r\n    return path.resolve(rushConfiguration.commonRushConfigFolder, RushConstants.buildCacheFilename);\r\n  }\r\n}\r\n"]}