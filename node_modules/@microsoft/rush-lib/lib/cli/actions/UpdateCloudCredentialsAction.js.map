{"version":3,"file":"UpdateCloudCredentialsAction.js","sourceRoot":"","sources":["../../../src/cli/actions/UpdateCloudCredentialsAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { CommandLineStringParameter, CommandLineFlagParameter } from '@rushstack/ts-command-line';\r\nimport { AlreadyReportedError, ConsoleTerminalProvider, Terminal } from '@rushstack/node-core-library';\r\n\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { BaseRushAction } from './BaseRushAction';\r\nimport { BuildCacheConfiguration } from '../../api/BuildCacheConfiguration';\r\nimport { RushConstants } from '../../logic/RushConstants';\r\n\r\nexport class UpdateCloudCredentialsAction extends BaseRushAction {\r\n  private _interactiveModeFlag!: CommandLineFlagParameter;\r\n  private _credentialParameter!: CommandLineStringParameter;\r\n  private _deleteFlag!: CommandLineFlagParameter;\r\n\r\n  public constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionName: RushConstants.updateCloudCredentialsCommandName,\r\n      summary: '(EXPERIMENTAL) Update the credentials used by the build cache provider.',\r\n      documentation:\r\n        '(EXPERIMENTAL) If the build caching feature is configured, this command facilitates ' +\r\n        'updating the credentials used by a cloud-based provider.',\r\n      safeForSimultaneousRushProcesses: false,\r\n      parser\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._interactiveModeFlag = this.defineFlagParameter({\r\n      parameterLongName: '--interactive',\r\n      parameterShortName: '-i',\r\n      description: 'Run the credential update operation in interactive mode, if supported by the provider.'\r\n    });\r\n    this._credentialParameter = this.defineStringParameter({\r\n      parameterLongName: '--credential',\r\n      argumentName: 'CREDENTIAL_STRING',\r\n      description: 'A static credential, to be cached.'\r\n    });\r\n    this._deleteFlag = this.defineFlagParameter({\r\n      parameterLongName: '--delete',\r\n      parameterShortName: '-d',\r\n      description: 'If specified, delete stored credentials.'\r\n    });\r\n  }\r\n\r\n  protected async runAsync(): Promise<void> {\r\n    const terminal: Terminal = new Terminal(new ConsoleTerminalProvider());\r\n\r\n    if (!this.rushConfiguration.experimentsConfiguration.configuration.buildCache) {\r\n      terminal.writeErrorLine(\r\n        `The buildCache feature has not been enabled in ${RushConstants.experimentsFilename}.`\r\n      );\r\n      throw new AlreadyReportedError();\r\n    }\r\n\r\n    const buildCacheConfiguration:\r\n      | BuildCacheConfiguration\r\n      | undefined = await BuildCacheConfiguration.loadFromDefaultPathAsync(terminal, this.rushConfiguration);\r\n\r\n    if (!buildCacheConfiguration) {\r\n      const buildCacheConfigurationFilePath: string = BuildCacheConfiguration.getBuildCacheConfigFilePath(\r\n        this.rushConfiguration\r\n      );\r\n      terminal.writeErrorLine(\r\n        `The a build cache has not been configured. Configure it by creating a ` +\r\n          `\"${buildCacheConfigurationFilePath}\" file.`\r\n      );\r\n      throw new AlreadyReportedError();\r\n    }\r\n\r\n    if (this._deleteFlag.value) {\r\n      if (this._interactiveModeFlag.value || this._credentialParameter.value !== undefined) {\r\n        terminal.writeErrorLine(\r\n          `If the ${this._deleteFlag.longName} is provided, no other parameters may be provided.`\r\n        );\r\n        throw new AlreadyReportedError();\r\n      } else if (buildCacheConfiguration.cloudCacheProvider) {\r\n        await buildCacheConfiguration.cloudCacheProvider.deleteCachedCredentialsAsync(terminal);\r\n      } else {\r\n        terminal.writeLine('A cloud build cache is not configured; there is nothing to delete.');\r\n      }\r\n    } else if (this._interactiveModeFlag.value && this._credentialParameter.value !== undefined) {\r\n      terminal.writeErrorLine(\r\n        `Both the ${this._interactiveModeFlag.longName} and the ` +\r\n          `${this._credentialParameter.longName} parameters were provided. Only one ` +\r\n          'or the other may be used at a time.'\r\n      );\r\n      throw new AlreadyReportedError();\r\n    } else if (this._interactiveModeFlag.value) {\r\n      if (buildCacheConfiguration.cloudCacheProvider) {\r\n        await buildCacheConfiguration.cloudCacheProvider.updateCachedCredentialInteractiveAsync(terminal);\r\n      } else {\r\n        terminal.writeLine('A cloud build cache is not configured. Credentials are not required.');\r\n      }\r\n    } else if (this._credentialParameter.value !== undefined) {\r\n      if (buildCacheConfiguration.cloudCacheProvider) {\r\n        await buildCacheConfiguration.cloudCacheProvider.updateCachedCredentialAsync(\r\n          terminal,\r\n          this._credentialParameter.value\r\n        );\r\n      } else {\r\n        terminal.writeErrorLine('A cloud build cache is not configured. Credentials are not supported.');\r\n        throw new AlreadyReportedError();\r\n      }\r\n    } else {\r\n      terminal.writeErrorLine(\r\n        `One of the ${this._interactiveModeFlag.longName} parameter, the ` +\r\n          `${this._credentialParameter.longName} parameter, or the ` +\r\n          `${this._deleteFlag.longName} parameter must be provided.`\r\n      );\r\n      throw new AlreadyReportedError();\r\n    }\r\n  }\r\n}\r\n"]}