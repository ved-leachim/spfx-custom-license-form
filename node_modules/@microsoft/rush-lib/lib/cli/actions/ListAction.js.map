{"version":3,"file":"ListAction.js","sourceRoot":"","sources":["../../../src/cli/actions/ListAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Import } from '@rushstack/node-core-library';\r\nimport { BaseRushAction } from './BaseRushAction';\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { CommandLineFlagParameter } from '@rushstack/ts-command-line';\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\n\r\nconst cliTable: typeof import('cli-table') = Import.lazy('cli-table', require);\r\n\r\nexport interface IJsonEntry {\r\n  name: string;\r\n  version: string;\r\n  path: string;\r\n  fullPath: string;\r\n}\r\n\r\nexport interface IJsonOutput {\r\n  projects: IJsonEntry[];\r\n}\r\n\r\nexport class ListAction extends BaseRushAction {\r\n  private _version!: CommandLineFlagParameter;\r\n  private _path!: CommandLineFlagParameter;\r\n  private _fullPath!: CommandLineFlagParameter;\r\n  private _jsonFlag!: CommandLineFlagParameter;\r\n\r\n  public constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionName: 'list',\r\n      summary: 'List package information for all projects in the repo',\r\n      documentation:\r\n        'List package names, and optionally version (--version) and ' +\r\n        'path (--path) or full path (--full-path), for projects in the ' +\r\n        'current rush config.',\r\n      parser\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._version = this.defineFlagParameter({\r\n      parameterLongName: '--version',\r\n      parameterShortName: '-v',\r\n      description:\r\n        'If this flag is specified, the project version will be ' +\r\n        'displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._path = this.defineFlagParameter({\r\n      parameterLongName: '--path',\r\n      parameterShortName: '-p',\r\n      description:\r\n        'If this flag is specified, the project path will be ' +\r\n        'displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._fullPath = this.defineFlagParameter({\r\n      parameterLongName: '--full-path',\r\n      parameterShortName: '-f',\r\n      description:\r\n        'If this flag is specified, the project full path will ' +\r\n        'be displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._jsonFlag = this.defineFlagParameter({\r\n      parameterLongName: '--json',\r\n      description: 'If this flag is specified, output will be in JSON format.'\r\n    });\r\n  }\r\n\r\n  protected async runAsync(): Promise<void> {\r\n    const allPackages: Map<string, RushConfigurationProject> = this.rushConfiguration.projectsByName;\r\n    if (this._jsonFlag.value) {\r\n      this._printJson(allPackages);\r\n    } else if (this._version.value || this._path.value || this._fullPath.value) {\r\n      this._printListTable(allPackages);\r\n    } else {\r\n      this._printList(allPackages);\r\n    }\r\n  }\r\n\r\n  private _printJson(allPackages: Map<string, RushConfigurationProject>): void {\r\n    const projects: IJsonEntry[] = [];\r\n    allPackages.forEach((config: RushConfigurationProject, name: string) => {\r\n      const project: IJsonEntry = {\r\n        name: name,\r\n        version: config.packageJson.version,\r\n        path: config.projectRelativeFolder,\r\n        fullPath: config.projectFolder\r\n      };\r\n      projects.push(project);\r\n    });\r\n\r\n    const output: IJsonOutput = {\r\n      projects\r\n    };\r\n    console.log(JSON.stringify(output, undefined, 2));\r\n  }\r\n\r\n  private _printList(allPackages: Map<string, RushConfigurationProject>): void {\r\n    allPackages.forEach((config: RushConfigurationProject, name: string) => {\r\n      console.log(name);\r\n    });\r\n  }\r\n\r\n  private _printListTable(allPackages: Map<string, RushConfigurationProject>): void {\r\n    const tableHeader: string[] = ['Project'];\r\n    if (this._version.value) {\r\n      tableHeader.push('Version');\r\n    }\r\n    if (this._path.value) {\r\n      tableHeader.push('Path');\r\n    }\r\n    if (this._fullPath.value) {\r\n      tableHeader.push('Full Path');\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/typedef\r\n    const table = new cliTable({\r\n      head: tableHeader\r\n    });\r\n\r\n    allPackages.forEach((config: RushConfigurationProject, name: string) => {\r\n      const packageRow: string[] = [name];\r\n      if (this._version.value) {\r\n        packageRow.push(config.packageJson.version);\r\n      }\r\n      if (this._path.value) {\r\n        packageRow.push(config.projectRelativeFolder);\r\n      }\r\n      if (this._fullPath.value) {\r\n        packageRow.push(config.projectFolder);\r\n      }\r\n      table.push(packageRow);\r\n    });\r\n    console.log(table.toString());\r\n  }\r\n}\r\n"]}