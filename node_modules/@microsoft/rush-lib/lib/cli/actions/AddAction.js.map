{"version":3,"file":"AddAction.js","sourceRoot":"","sources":["../../../src/cli/actions/AddAction.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;AAE3D,uCAAyB;AACzB,+CAAiC;AACjC,oEAAsD;AAItD,qDAAkD;AAElD,yEAAsE;AAGtE,MAAM,wBAAwB,GAAmC,0BAAM,CAAC,IAAI,CAC1E,gCAAgC,EAChC,OAAO,CACR,CAAC;AAEF,MAAa,SAAU,SAAQ,+BAAc;IAS3C,YAAmB,MAA6B;QAC9C,MAAM,aAAa,GAAa;YAC9B,kHAAkH;gBAChH,+GAA+G;gBAC/G,gHAAgH;gBAChH,+GAA+G;gBAC/G,kHAAkH;gBAClH,+DAA+D;SAClE,CAAC;QACF,KAAK,CAAC;YACJ,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE,8DAA8D;YACvE,aAAa,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;YACzC,gCAAgC,EAAE,KAAK;YACvC,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAEM,kBAAkB;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC7C,iBAAiB,EAAE,WAAW;YAC9B,kBAAkB,EAAE,IAAI;YACxB,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,SAAS;YACvB,WAAW,EACT,2EAA2E;gBAC3E,4FAA4F;gBAC5F,4EAA4E;gBAC5E,2GAA2G;SAC9G,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACzC,iBAAiB,EAAE,SAAS;YAC5B,WAAW,EACT,iDAAiD;gBACjD,uEAAuE;SAC1E,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACzC,iBAAiB,EAAE,SAAS;YAC5B,WAAW,EACT,iDAAiD;gBACjD,mEAAmE;SACtE,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACjD,iBAAiB,EAAE,OAAO;YAC1B,WAAW,EACT,8FAA8F;SACjG,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAClD,iBAAiB,EAAE,mBAAmB;YACtC,kBAAkB,EAAE,IAAI;YACxB,WAAW,EACT,gFAAgF;gBAChF,2DAA2D;SAC9D,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC9C,iBAAiB,EAAE,eAAe;YAClC,kBAAkB,EAAE,IAAI;YACxB,WAAW,EACT,gGAAgG;SACnG,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACvC,iBAAiB,EAAE,OAAO;YAC1B,WAAW,EAAE,6DAA6D;SAC3E,CAAC,CAAC;IACL,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,IAAI,QAAoC,CAAC;QACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC;SAC5C;aAAM;YACL,MAAM,cAAc,GAEJ,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;YAE3E,IAAI,CAAC,cAAc,EAAE;gBACnB,MAAM,IAAI,KAAK,CACb,wDAAwD;oBACtD,sDAAsD,IAAI,CAAC,QAAQ,CAAC,QAAQ,WAAW,CAC1F,CAAC;aACH;YAED,QAAQ,GAAG,CAAC,cAAc,CAAC,CAAC;SAC7B;QAED,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YAClD,MAAM,IAAI,KAAK,CACb,gBAAgB,IAAI,CAAC,UAAU,CAAC,QAAQ,UAAU,IAAI,CAAC,UAAU,CAAC,QAAQ,uBAAuB,CAClG,CAAC;SACH;QAED,IAAI,OAAO,GAAuB,SAAS,CAAC;QAC5C,IAAI,WAAW,GAAuB,IAAI,CAAC,YAAY,CAAC,KAAM,CAAC;QAC/D,MAAM,KAAK,GAAa,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE/C,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,2BAA2B;YAC3B,WAAW,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACpB;aAAM;YACL,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACpB;QAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE;YACtE,MAAM,IAAI,KAAK,CAAC,qBAAqB,WAAW,iBAAiB,CAAC,CAAC;SACpE;QAED,IAAI,OAAO,IAAI,OAAO,KAAK,QAAQ,EAAE;YACnC,MAAM,SAAS,GAAwB,IAAI,yCAAmB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YACrF,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE;gBAC/F,MAAM,IAAI,KAAK,CAAC,yBAAyB,OAAO,iBAAiB,CAAC,CAAC;aACpE;SACF;QAED,MAAM,OAAO,GAA+C,IAAI,wBAAwB,CAAC,kBAAkB,CACzG,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,gBAAgB,CACtB,CAAC;QAEF,IAAI,UAA+C,CAAC;QACpD,IAAI,OAAO,IAAI,OAAO,KAAK,QAAQ,EAAE;YACnC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;gBAClD,MAAM,IAAI,KAAK,CACb,QAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,UAAU,IAAI,CAAC,UAAU,CAAC,QAAQ,oCAAoC;oBACpG,8BAA8B,IAAI,CAAC,YAAY,CAAC,QAAQ,6BAA6B,OAAO,iBAAiB,CAChH,CAAC;aACH;YAED,UAAU,kCAAmD,CAAC;SAC/D;aAAM;YACL,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;gBAChC,CAAC;gBACD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK;oBACvB,CAAC;oBACD,CAAC,oBAA2C,CAAC;SAChD;QAED,MAAM,OAAO,CAAC,SAAS,CAAC;YACtB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;YACxB,cAAc,EAAE,OAAO;YACvB,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK;YAC5C,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK;YACnD,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACtC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;YACjC,UAAU,EAAE,UAAU;SACvB,CAAC,CAAC;IACL,CAAC;CACF;AA9JD,8BA8JC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as os from 'os';\r\nimport * as semver from 'semver';\r\nimport { Import } from '@rushstack/node-core-library';\r\nimport { CommandLineFlagParameter, CommandLineStringParameter } from '@rushstack/ts-command-line';\r\n\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport { BaseRushAction } from './BaseRushAction';\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { DependencySpecifier } from '../../logic/DependencySpecifier';\r\n\r\nimport type * as PackageJsonUpdaterTypes from '../../logic/PackageJsonUpdater';\r\nconst packageJsonUpdaterModule: typeof PackageJsonUpdaterTypes = Import.lazy(\r\n  '../../logic/PackageJsonUpdater',\r\n  require\r\n);\r\n\r\nexport class AddAction extends BaseRushAction {\r\n  private _allFlag!: CommandLineFlagParameter;\r\n  private _exactFlag!: CommandLineFlagParameter;\r\n  private _caretFlag!: CommandLineFlagParameter;\r\n  private _devDependencyFlag!: CommandLineFlagParameter;\r\n  private _makeConsistentFlag!: CommandLineFlagParameter;\r\n  private _skipUpdateFlag!: CommandLineFlagParameter;\r\n  private _packageName!: CommandLineStringParameter;\r\n\r\n  public constructor(parser: RushCommandLineParser) {\r\n    const documentation: string[] = [\r\n      'Adds a specified package as a dependency of the current project (as determined by the current working directory)' +\r\n        ' and then runs \"rush update\". If no version is specified, a version will be automatically detected (typically' +\r\n        ' either the latest version or a version that won\\'t break the \"ensureConsistentVersions\" policy). If a version' +\r\n        ' range (or a workspace range) is specified, the latest version in the range will be used. The version will be' +\r\n        ' automatically prepended with a tilde, unless the \"--exact\" or \"--caret\" flags are used. The \"--make-consistent\"' +\r\n        ' flag can be used to update all packages with the dependency.'\r\n    ];\r\n    super({\r\n      actionName: 'add',\r\n      summary: 'Adds a dependency to the package.json and runs rush upgrade.',\r\n      documentation: documentation.join(os.EOL),\r\n      safeForSimultaneousRushProcesses: false,\r\n      parser\r\n    });\r\n  }\r\n\r\n  public onDefineParameters(): void {\r\n    this._packageName = this.defineStringParameter({\r\n      parameterLongName: '--package',\r\n      parameterShortName: '-p',\r\n      required: true,\r\n      argumentName: 'PACKAGE',\r\n      description:\r\n        '(Required) The name of the package which should be added as a dependency.' +\r\n        ' A SemVer version specifier can be appended after an \"@\" sign.  WARNING: Symbol characters' +\r\n        \" are usually interpreted by your shell, so it's recommended to use quotes.\" +\r\n        ' For example, write \"rush add --package \"example@^1.2.3\"\" instead of \"rush add --package example@^1.2.3\".'\r\n    });\r\n    this._exactFlag = this.defineFlagParameter({\r\n      parameterLongName: '--exact',\r\n      description:\r\n        'If specified, the SemVer specifier added to the' +\r\n        ' package.json will be an exact version (e.g. without tilde or caret).'\r\n    });\r\n    this._caretFlag = this.defineFlagParameter({\r\n      parameterLongName: '--caret',\r\n      description:\r\n        'If specified, the SemVer specifier added to the' +\r\n        ' package.json will be a prepended with a \"caret\" specifier (\"^\").'\r\n    });\r\n    this._devDependencyFlag = this.defineFlagParameter({\r\n      parameterLongName: '--dev',\r\n      description:\r\n        'If specified, the package will be added to the \"devDependencies\" section of the package.json'\r\n    });\r\n    this._makeConsistentFlag = this.defineFlagParameter({\r\n      parameterLongName: '--make-consistent',\r\n      parameterShortName: '-m',\r\n      description:\r\n        'If specified, other packages with this dependency will have their package.json' +\r\n        ' files updated to use the same version of the dependency.'\r\n    });\r\n    this._skipUpdateFlag = this.defineFlagParameter({\r\n      parameterLongName: '--skip-update',\r\n      parameterShortName: '-s',\r\n      description:\r\n        'If specified, the \"rush update\" command will not be run after updating the package.json files.'\r\n    });\r\n    this._allFlag = this.defineFlagParameter({\r\n      parameterLongName: '--all',\r\n      description: 'If specified, the dependency will be added to all projects.'\r\n    });\r\n  }\r\n\r\n  public async runAsync(): Promise<void> {\r\n    let projects: RushConfigurationProject[];\r\n    if (this._allFlag.value) {\r\n      projects = this.rushConfiguration.projects;\r\n    } else {\r\n      const currentProject:\r\n        | RushConfigurationProject\r\n        | undefined = this.rushConfiguration.tryGetProjectForPath(process.cwd());\r\n\r\n      if (!currentProject) {\r\n        throw new Error(\r\n          'The \"rush add\" command must be invoked under a project' +\r\n            ` folder that is registered in rush.json unless the ${this._allFlag.longName} is used.`\r\n        );\r\n      }\r\n\r\n      projects = [currentProject];\r\n    }\r\n\r\n    if (this._caretFlag.value && this._exactFlag.value) {\r\n      throw new Error(\r\n        `Only one of \"${this._caretFlag.longName}\" and \"${this._exactFlag.longName}\" should be specified`\r\n      );\r\n    }\r\n\r\n    let version: string | undefined = undefined;\r\n    let packageName: string | undefined = this._packageName.value!;\r\n    const parts: string[] = packageName.split('@');\r\n\r\n    if (parts[0] === '') {\r\n      // this is a scoped package\r\n      packageName = '@' + parts[1];\r\n      version = parts[2];\r\n    } else {\r\n      packageName = parts[0];\r\n      version = parts[1];\r\n    }\r\n\r\n    if (!this.rushConfiguration.packageNameParser.isValidName(packageName)) {\r\n      throw new Error(`The package name \"${packageName}\" is not valid.`);\r\n    }\r\n\r\n    if (version && version !== 'latest') {\r\n      const specifier: DependencySpecifier = new DependencySpecifier(packageName, version);\r\n      if (!semver.validRange(specifier.versionSpecifier) && !semver.valid(specifier.versionSpecifier)) {\r\n        throw new Error(`The SemVer specifier \"${version}\" is not valid.`);\r\n      }\r\n    }\r\n\r\n    const updater: PackageJsonUpdaterTypes.PackageJsonUpdater = new packageJsonUpdaterModule.PackageJsonUpdater(\r\n      this.rushConfiguration,\r\n      this.rushGlobalFolder\r\n    );\r\n\r\n    let rangeStyle: PackageJsonUpdaterTypes.SemVerStyle;\r\n    if (version && version !== 'latest') {\r\n      if (this._exactFlag.value || this._caretFlag.value) {\r\n        throw new Error(\r\n          `The \"${this._caretFlag.longName}\" and \"${this._exactFlag.longName}\" flags may not be specified if a ` +\r\n            `version is provided in the ${this._packageName.longName} specifier. In this case \"${version}\" was provided.`\r\n        );\r\n      }\r\n\r\n      rangeStyle = packageJsonUpdaterModule.SemVerStyle.Passthrough;\r\n    } else {\r\n      rangeStyle = this._caretFlag.value\r\n        ? packageJsonUpdaterModule.SemVerStyle.Caret\r\n        : this._exactFlag.value\r\n        ? packageJsonUpdaterModule.SemVerStyle.Exact\r\n        : packageJsonUpdaterModule.SemVerStyle.Tilde;\r\n    }\r\n\r\n    await updater.doRushAdd({\r\n      projects: projects,\r\n      packageName: packageName,\r\n      initialVersion: version,\r\n      devDependency: this._devDependencyFlag.value,\r\n      updateOtherPackages: this._makeConsistentFlag.value,\r\n      skipUpdate: this._skipUpdateFlag.value,\r\n      debugInstall: this.parser.isDebug,\r\n      rangeStyle: rangeStyle\r\n    });\r\n  }\r\n}\r\n"]}