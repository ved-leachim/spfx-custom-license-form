/**
 * @copyright (c) Microsoft Corporation. All rights reserved.
 */
import { ServiceKey, ServiceScope } from '@microsoft/sp-core-library';
import { ICacheDataProvider } from './ICacheDataProvider';
/**
 * The interface for the cache key
 *
 * @internal
 */
export interface ICacheKey {
    /**
     * The key to access the cache
     */
    key: string;
}
/**
 * The CacheDataProviderService used for injecting CacheDataprovider singelton to SPHttpClient
 *
 * @internal
 */
export declare class CacheDataProviderService<TKey extends ICacheKey> {
    static serviceKey: ServiceKey<CacheDataProviderService<any>>;
    private _cacheDataProvider;
    /**
     * Initializes a new instance of the CacheDataProviderService class.
     * @param serviceScope - The service scope.
     */
    constructor(serviceScope: ServiceScope);
    /**
     * Gets or sets the cache data provider
     *
     * @internal
     */
    get _provider(): ICacheDataProvider<TKey>;
    set _provider(provider: ICacheDataProvider<TKey>);
}
/**
 * Gets the service key.
 *
 * @internal
 */
export declare function getCacheDataProviderServiceKey<T extends ICacheKey>(): ServiceKey<CacheDataProviderService<T>>;
//# sourceMappingURL=CacheDataProviderService.d.ts.map