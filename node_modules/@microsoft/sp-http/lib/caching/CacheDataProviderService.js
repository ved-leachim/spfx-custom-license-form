/**
 * @copyright (c) Microsoft Corporation. All rights reserved.
 */
import { ServiceKey, Validate } from '@microsoft/sp-core-library';
/**
 * The CacheDataProviderService used for injecting CacheDataprovider singelton to SPHttpClient
 *
 * @internal
 */
var CacheDataProviderService = /** @class */ (function () {
    /**
     * Initializes a new instance of the CacheDataProviderService class.
     * @param serviceScope - The service scope.
     */
    function CacheDataProviderService(serviceScope) {
        // do nothing
    }
    Object.defineProperty(CacheDataProviderService.prototype, "_provider", {
        /**
         * Gets or sets the cache data provider
         *
         * @internal
         */
        get: function () {
            return this._cacheDataProvider;
        },
        set: function (provider) {
            Validate.isNotNullOrUndefined(provider, 'Cache provider can not be null or undefined');
            if (provider.isDisposed) {
                throw new Error('Cache provider can not be disposed');
            }
            if (this._cacheDataProvider) {
                throw new Error('Cache provider can only be set once');
            }
            this._cacheDataProvider = provider;
        },
        enumerable: false,
        configurable: true
    });
    return CacheDataProviderService;
}());
export { CacheDataProviderService };
/**
 * Gets the service key.
 *
 * @internal
 */
export function getCacheDataProviderServiceKey() {
    if (!CacheDataProviderService.serviceKey) {
        CacheDataProviderService.serviceKey = ServiceKey.create('sp-http:CacheDataProvider', CacheDataProviderService);
    }
    return CacheDataProviderService.serviceKey;
}
//# sourceMappingURL=CacheDataProviderService.js.map