import { IAadTokenProviderConfiguration } from '../../IAadTokenProvider';
import { ISuccessfulTokenResponse } from './TokenRequestManager';
export declare const ACCESS_TOKEN_KEY: string;
export declare const EXPIRATION_KEY: string;
export declare class TokenStorage {
    private _memoryCache;
    private _clientId;
    private _aadUserId;
    static getCacheKey(userId: string, clientId: string, typeOfResource: string, resourceUri: string): string;
    /**
     * Calculates the expires in value in milliseconds for the acquired token
     * @ignore
     */
    private static _getTokenExpirationInMilliseconds;
    private static _isExpired;
    private static _isValid;
    constructor(tokenProviderParameters: IAadTokenProviderConfiguration);
    getToken(resourceUri: string): string;
    saveToken(tokenResponse: ISuccessfulTokenResponse, resourceUri: string): void;
}
//# sourceMappingURL=TokenStorage.d.ts.map