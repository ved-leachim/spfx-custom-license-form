import { __extends } from "tslib";
import { AadHttpClient, AadHttpClientFactory, _AadTokenProviders } from '../index';
/**
 * This class is useful for modifying the internal ADAL.js implementation of the OAuth2TokenProvider.
 */
var MockAadHttpClientFactory = /** @class */ (function (_super) {
    __extends(MockAadHttpClientFactory, _super);
    function MockAadHttpClientFactory(serviceScope, tokenProvider) {
        var _this = _super.call(this, serviceScope) || this;
        _this._mockServiceScope = serviceScope;
        _this._tokenProvider = tokenProvider;
        return _this;
    }
    /**
     * Returns an instance of the AadHttpClient that communicates with the current tenant's configurable
     * Service Principal.
     * @param resourceEndpoint - The target AAD application's resource endpoint.
     */
    MockAadHttpClientFactory.prototype.getClient = function (resourceEndpoint) {
        return Promise.resolve(new AadHttpClient(this._mockServiceScope, resourceEndpoint, { tokenProvider: this._tokenProvider }));
    };
    /**
     * Returns an instance of the AadHttpClient that communicates with the preconfigured
     * Service Principal.
     * @param resourceEndpoint - The target AAD application's resource endpoint.
     * @internal
     */
    MockAadHttpClientFactory.prototype._getStandardClient = function (resourceEndpoint) {
        return Promise.resolve(new AadHttpClient(this._mockServiceScope, resourceEndpoint, {
            configuration: _AadTokenProviders.preAuthorizedConfiguration,
            tokenProvider: this._tokenProvider
        }));
    };
    return MockAadHttpClientFactory;
}(AadHttpClientFactory));
export default MockAadHttpClientFactory;
//# sourceMappingURL=MockAadHttpClientFactory.js.map