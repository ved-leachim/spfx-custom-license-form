import { __assign, __extends } from "tslib";
import { ServiceScope } from '@microsoft/sp-core-library';
import BaseSearchQueryModifier from './BaseSearchQueryModifier';
import SearchQueryExtensionManager from './SearchQueryExtensionManager';
var TestExtension = /** @class */ (function (_super) {
    __extends(TestExtension, _super);
    function TestExtension() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(TestExtension.prototype, "componentId", {
        get: function () {
            return '00000000-0000-0000-0000-000000000000';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TestExtension.prototype, "manifest", {
        // tslint:disable-next-line: no-any
        get: function () {
            return {
                alias: 'TestExtension'
            };
        },
        enumerable: false,
        configurable: true
    });
    TestExtension.prototype.modifySearchQuery = function (query) {
        query.queryText = query.queryText + ' test';
        return Promise.resolve(query);
    };
    return TestExtension;
}(BaseSearchQueryModifier));
var SlowExtension = /** @class */ (function (_super) {
    __extends(SlowExtension, _super);
    function SlowExtension() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SlowExtension.prototype, "componentId", {
        get: function () {
            return '00000000-0000-0000-0000-000000000000';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SlowExtension.prototype, "manifest", {
        // tslint:disable-next-line: no-any
        get: function () {
            return {
                alias: 'SlowExtension'
            };
        },
        enumerable: false,
        configurable: true
    });
    SlowExtension.prototype.modifySearchQuery = function (query) {
        return new Promise(function (resolve) {
            setTimeout(function () {
                resolve(__assign(__assign({}, query), { queryText: 'BAD' }));
            }, 100);
        });
    };
    Object.defineProperty(SlowExtension.prototype, "timeout", {
        get: function () {
            return 1;
        },
        enumerable: false,
        configurable: true
    });
    return SlowExtension;
}(BaseSearchQueryModifier));
describe('SearchQueryExtensionManager', function () {
    test('getSearchQuery with two extensions', function (done) {
        var manager = new SearchQueryExtensionManager(ServiceScope.startNewRoot());
        // tslint:disable: no-any
        manager._extensions.push(new TestExtension());
        manager._extensions.push(new TestExtension());
        // tslint:enable: no-any
        var query = manager.getSearchQuery('aaa');
        query
            .then(function (q) {
            expect(q).toEqual('aaa test test');
            done();
        })
            .catch(function (e) {
            fail(e);
            done();
        });
    });
});
test('getSearchQuery with an extension that times out', function (done) {
    var manager = new SearchQueryExtensionManager(ServiceScope.startNewRoot());
    // tslint:disable: no-any
    manager._extensions.push(new SlowExtension());
    // tslint:enable: no-any
    var query = manager.getSearchQuery('aaa');
    query
        .then(function (q) {
        expect(q).toEqual('aaa');
        done();
    })
        .catch(function (e) {
        fail(e);
        done();
    });
});
//# sourceMappingURL=SearchQueryExtensionManager.test.js.map