"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Lint = require("tslint");
const tsutils_1 = require("tsutils");
const ts = require("typescript");
/**
 * Validate valid GUID strings are being passed as an argument to SPKillSwitch.isActivated calls.
 * JavaScript does not have a native GUID type. We removed expensive runtime parsing during production
 * builds when checking kill switches. In order to ensure type safety, we are validating at build time with tslint.
 */
// tslint:disable-next-line:export-name
class Rule extends Lint.Rules.AbstractRule {
    apply(source) {
        return this.applyWithFunction(source, validKillSwitchGuid);
    }
}
exports.Rule = Rule;
Rule.metadata = {
    ruleName: 'valid-kill-switch-guid',
    description: 'Warn if _SPKillSwitch.isActivated is being called with an incorrect argument',
    rationale: 'Compile time type safety',
    optionsDescription: 'No options available.',
    options: undefined,
    type: 'functionality',
    typescriptOnly: false
};
function validKillSwitchGuid(context, node) {
    if (!node) {
        ts.forEachChild(context.sourceFile, (n) => validKillSwitchGuid(context, n));
    }
    else {
        if (tsutils_1.isCallExpression(node) && isSPKillSwitch(node) && !isValidGuid(node.arguments[0].getText())) {
            context.addFailureAtNode(node, '_SPKillSwitch.isActivated argument must be a valid, lower-case GUID');
        }
        ts.forEachChild(node, (n) => validKillSwitchGuid(context, n));
    }
}
function isSPKillSwitch(node) {
    return (tsutils_1.isPropertyAccessExpression(node.expression) &&
        node.expression.name.getText() === 'isActivated' &&
        tsutils_1.isIdentifier(node.expression.expression) &&
        (node.expression.expression.getText() === '_SPKillSwitch' ||
            node.expression.expression.getText() === 'SPKillSwitch') &&
        node.arguments.length === 1);
}
function isValidGuid(guidString) {
    return /^'[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}'$/.test(guidString);
}
//# sourceMappingURL=validKillSwitchGuidRule.js.map