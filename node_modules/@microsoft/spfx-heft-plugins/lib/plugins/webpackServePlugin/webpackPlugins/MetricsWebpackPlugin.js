"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetricsWebpackPlugin = void 0;
const PLUGIN_NAME = 'TelemetryPlugin';
const COMMAND = 'start_compile';
const COMMAND_INIT = 'start_init';
/**
 * @internal
 */
class MetricsWebpackPlugin {
    constructor(metricsCollector) {
        this._firstRun = true;
        this._metricsCollector = metricsCollector;
    }
    /**
     * @public
     * @param compiler - compiler
     * Record start and end telemetry for each webpack compiler run.
     */
    apply(compiler) {
        compiler.hooks.watchRun.tap(PLUGIN_NAME, () => {
            this._metricsCollector.setStartTime();
        });
        compiler.hooks.done.tapPromise(PLUGIN_NAME, () => {
            this._metricsCollector.record(this._firstRun ? COMMAND_INIT : COMMAND);
            this._firstRun = false;
            return this._metricsCollector.flushAsync();
        });
    }
}
exports.MetricsWebpackPlugin = MetricsWebpackPlugin;
//# sourceMappingURL=MetricsWebpackPlugin.js.map