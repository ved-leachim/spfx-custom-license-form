"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetryUtilities = void 0;
/**
 * Executes promises and optionally retries them if they fail
 * @internal
 */
class RetryUtilities {
    static setTimeoutMock(setTimeout) {
        RetryUtilities._setTimeout = setTimeout;
    }
    static async runWithRetriesAsync(fn, maxRetries, retryDelayInMs = 0) {
        let retryCounter = 0;
        while (true) {
            // tslint:disable-line:no-constant-condition
            try {
                return await fn();
            }
            catch (e) {
                if (++retryCounter > maxRetries) {
                    throw e;
                }
                else if (retryDelayInMs > 0) {
                    await new Promise((resolve) => {
                        RetryUtilities._setTimeout(() => resolve(), retryDelayInMs);
                    });
                }
            }
        }
    }
}
exports.RetryUtilities = RetryUtilities;
RetryUtilities._setTimeout = setTimeout;
//# sourceMappingURL=RetryUtilities.js.map