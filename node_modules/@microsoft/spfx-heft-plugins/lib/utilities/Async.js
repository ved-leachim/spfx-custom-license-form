"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Async = void 0;
class Async {
    /**
     * Utility method to limit the number of parallel async operations with a promise queue.
     */
    static async forEachLimitAsync(array, parallelismLimit, fn) {
        return new Promise((resolve, reject) => {
            if (parallelismLimit < 1) {
                throw new Error('parallelismLimit must be at least 1');
            }
            let operationsInProgress = 1;
            let index = 0;
            function onOperationCompletion() {
                operationsInProgress--;
                if (operationsInProgress === 0 && index >= array.length) {
                    resolve();
                }
                while (operationsInProgress < parallelismLimit) {
                    if (index < array.length) {
                        operationsInProgress++;
                        fn(array[index++])
                            .then(() => onOperationCompletion())
                            .catch(reject);
                    }
                    else {
                        break;
                    }
                }
            }
            onOperationCompletion();
        });
    }
    /**
     * Utility method to continuously run an async watcher in Heft's watchMode.
     */
    static runWatcherWithErrorHandling(fn, scopedLogger) {
        try {
            fn().catch((e) => scopedLogger.emitError(e));
        }
        catch (e) {
            scopedLogger.emitError(e);
        }
    }
}
exports.Async = Async;
//# sourceMappingURL=Async.js.map