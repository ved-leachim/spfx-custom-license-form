"use strict";
/**
 * file ensureContainer.ts
 * Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Creates a container on an Azure Blob Service connection object
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureContainer = void 0;
/**
 * @internal
 */
function ensureContainer(terminal, blobService, containerName, containerOptions) {
    if (!containerOptions) {
        containerOptions = {
            publicAccessLevel: 'blob'
        };
    }
    return new Promise((resolve, reject) => {
        try {
            blobService.createContainerIfNotExists(containerName, containerOptions, (error, result) => {
                if (error) {
                    reject(new Error(`Unable to create container: ${containerName}`));
                }
                if (result) {
                    terminal.writeLine(`Created container: ${containerName}`);
                }
                else {
                    terminal.writeLine(`Container {${containerName}} exists`);
                }
                resolve(blobService);
            });
        }
        catch (error) {
            reject(new Error(error));
        }
    });
}
exports.ensureContainer = ensureContainer;
//# sourceMappingURL=ensureContainer.js.map