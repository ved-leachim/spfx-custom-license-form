/**
 * file uploadFilesTots
 * Copyright (c) Microsoft Corporation.  All rights reserved.
 *
 * Uploads a list of files to an Azure Blob Service instance
 */
import { BlobService } from 'azure-storage';
import { Terminal } from '@rushstack/node-core-library';
/**
 * Represents a file's local path and container-root-relative path in Azure Storage destination
 * @internal
 */
export interface IUploadableFile {
    /**
     * A container-root-relative path to the file's Azure Storage destination
     *
     * For example, if the account name is "example" the container's name is "files",
     * and this property is "foo/bar/baz.json", the fully-qualified URL of the uploaded
     * file will be:
     * https://example.blob.core.windows.net/files/foo/bar/baz.json
     */
    azurePath: string;
    /**
     * A fully-qualified filesystem path to a file.
     */
    localPath: string;
}
/**
 * @internal
 */
export declare class UploadToAzure {
    static readonly DEFAULT_AZURE_MAX_PARALLELISM: number;
    static readonly DEFAULT_AZURE_RETRY_DELAY_MILLISECONDS: number;
    static readonly DEFAULT_AZURE_MAX_NUMBER_OF_RETRIES: number;
    /**
     * Upload file to Azure
     */
    static uploadFileToAzureAsync(terminal: Terminal, blobService: BlobService, containerName: string, localFilename: string, serverFilename?: string): Promise<BlobService>;
    /**
     * Upload files to Azure
     */
    static uploadFilesToAzureAsync(terminal: Terminal, blobService: BlobService, containerName: string, files: IUploadableFile[], maxParallelism: number, maxRetries: number, retryDelayInMs: number): Promise<BlobService>;
}
//# sourceMappingURL=UploadToAzure.d.ts.map