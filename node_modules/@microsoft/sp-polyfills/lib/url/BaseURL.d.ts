import URLSearchParams from './URLSearchParams';
/**
 * This class contains functionality that is common between the smaller "URL" class and the experimental
 *  complete "URL" class.
 */
declare abstract class BaseURL implements URL {
    private _searchParams;
    static createObjectURL(...args: any[]): string;
    static revokeObjectURL(...args: any[]): void;
    constructor(url: string, base?: string);
    abstract get href(): string;
    abstract set href(value: string);
    abstract get origin(): string;
    abstract get protocol(): string;
    abstract set protocol(value: string);
    abstract get username(): string;
    abstract set username(value: string);
    abstract get password(): string;
    abstract set password(value: string);
    abstract get host(): string;
    abstract set host(value: string);
    abstract get hostname(): string;
    abstract set hostname(value: string);
    abstract get port(): string;
    abstract set port(value: string);
    abstract get pathname(): string;
    abstract set pathname(value: string);
    get search(): string;
    set search(newValue: string);
    get searchParams(): URLSearchParams;
    get searchparams(): URLSearchParams;
    abstract get hash(): string;
    abstract set hash(value: string);
    toJSON(): string;
    protected abstract _invalidate(): void;
    protected _initializeSearchParams(): void;
    protected abstract get _query(): string | null;
    protected abstract set _query(value: string | null);
}
export default BaseURL;
//# sourceMappingURL=BaseURL.d.ts.map