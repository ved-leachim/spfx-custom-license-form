import { __extends } from "tslib";
import * as React from 'react';
import { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';
import { PrimaryButton } from 'office-ui-fabric-react/lib/Button';
import debugStyles from './../debugComponents.module.scss';
import styles from './DebugError.module.scss';
import * as strings from './DebugError.resx';
var DebugError = /** @class */ (function (_super) {
    __extends(DebugError, _super);
    function DebugError(props) {
        var _this = _super.call(this, props) || this;
        _this._handleDismissClick = function () {
            _this.setState({ isShown: false });
        };
        _this.state = {
            isShown: true
        };
        return _this;
    }
    DebugError.prototype.render = function () {
        return (React.createElement("div", { "data-automation-id": 'debugManifestErrorDialog', role: 'dialog' },
            React.createElement(Dialog, { hidden: !this.state.isShown, dialogContentProps: {
                    type: DialogType.largeHeader,
                    title: this.props.title
                }, modalProps: {
                    isBlocking: true,
                    containerClassName: debugStyles.dialogContainer
                } },
                React.createElement("p", { className: styles.detailText }, this.props.errorText || strings.debugManifestErrorDetail),
                React.createElement("p", { className: styles.errorText }, this.props.innerError.toString()),
                React.createElement(DialogFooter, null,
                    React.createElement(PrimaryButton, { "data-automation-id": 'debugManifestErrorDismissButton', onClick: this._handleDismissClick }, strings.debugManifestErrorDismissButtonText)))));
    };
    return DebugError;
}(React.Component));
export default DebugError;
//# sourceMappingURL=DebugError.js.map