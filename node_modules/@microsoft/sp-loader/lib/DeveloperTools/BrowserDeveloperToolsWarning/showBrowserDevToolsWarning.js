import { _BrowserDetection, _Browser, Text } from '@microsoft/sp-core-library';
import * as strings from './BrowserDeveloperToolsWarning.resx';
var WARNING_URL = 'https://technet.microsoft.com/en-us/library/bb794823.aspx';
export function showBrowserDevToolsWarning() {
    var browserInfo = _BrowserDetection.getBrowserInformation();
    var warningHeading = strings.warningHeading;
    var warningLine1 = strings.warningLine1;
    var warningLine2 = Text.format(strings.warningLine2, WARNING_URL);
    if (browserInfo.browser === _Browser.Chrome ||
        browserInfo.browser === _Browser.Firefox ||
        browserInfo.browser === _Browser.Safari) {
        var stylesCss = DEPRECATED_UNIT_TEST
            ? require('./BrowserDeveloperToolsWarning.css')
            : require('!!raw-loader!./BrowserDeveloperToolsWarning.css');
        // Parse out the styles from the CSS file
        var headingCss = minifyConsoleCSS((stylesCss.match(/\.heading\s*{([^}]+)}/) || [])[1]);
        var otherLinesCss = minifyConsoleCSS((stylesCss.match(/\.otherLines\s*{([^}]+)}/) || [])[1]);
        // Formatting supported
        console.log("\n%c" + warningHeading + "%c\n" + warningLine1 + "\n\n" + warningLine2 + "\n\n", headingCss, otherLinesCss);
    }
    else {
        // No formatting
        console.log("\n" + warningHeading + "\n" + warningLine1 + "\n\n" + warningLine2 + "\n\n");
    }
}
export function minifyConsoleCSS(css) {
    return css
        .replace(/^\s+/g, '') // Leading whitespace
        .replace(/:\s+/g, ':') // Leading attribute whitespace
        .replace(/;\s+/g, ';') // Trailing attribute whitespace
        .replace(/,\s+/g, ',') // Whitespace between commas in multi-value attribues
        .replace(/;$/, ''); // Remove final semi-colon
}
//# sourceMappingURL=showBrowserDevToolsWarning.js.map