/**
 * @file PerformanceDisplay.tsx
 * @Copyright (c) Microsoft Corporation.  All rights reserved.
 */
import { __extends } from "tslib";
import * as React from 'react';
import { Text } from '@microsoft/sp-core-library';
import PerformanceGraph from './PerformanceGraph/PerformanceGraph';
import PerformanceHeader from './PerformanceHeader/PerformanceHeader';
import { PerformanceDisplayStateProvider } from '../../../DataProviders/PerformanceDisplayStateProvider';
import styles from './PerformanceDisplay.module.scss';
import * as strings from './PerformanceDisplay.resx';
var PerformanceDisplay = /** @class */ (function (_super) {
    __extends(PerformanceDisplay, _super);
    function PerformanceDisplay(props) {
        var _this = _super.call(this, props) || this;
        _this.state = PerformanceDisplayStateProvider.getState();
        return _this;
    }
    PerformanceDisplay.prototype.render = function () {
        if (this.state.errorMessage) {
            var errorMessageClass = [styles.errorMessage, styles.msFontColorRedDark].join(' ');
            return (React.createElement("div", { className: errorMessageClass },
                strings.GeneralErrorMessage,
                React.createElement("br", null),
                Text.format(strings.ErrorMessagePrefix, this.state.errorMessage)));
        }
        else {
            return (React.createElement("div", { className: styles.performanceDisplayContainer },
                React.createElement(PerformanceHeader, { perfItems: this.state.perfItems, overallDuration: this.state.eupl, fullPageDuration: this.state.fullPageLoad, timeToInteractive: this.state.timeToInteractive, speedOfLight: this.state.speedOfLight, serverDuration: this.state.serverDuration, firstFlushDuration: this.state.firstFlushDuration, postFlush: this.state.postFlush, CDNStatus: this.state.CDNStatus, spoVersion: this.state.spoVersion, correlationId: this.state.correlationId, clientBuildVersion: this.state.clientBuildVersion }),
                React.createElement("div", { className: styles.graphContainer },
                    React.createElement(PerformanceGraph, { perfItems: this.state.perfItems, startTime: this.state.startTime, overallDuration: this.state.eupl }))));
        }
    };
    return PerformanceDisplay;
}(React.Component));
export default PerformanceDisplay;
//# sourceMappingURL=PerformanceDisplay.js.map