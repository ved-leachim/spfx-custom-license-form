import SPFlight from './SPFlight';
/**
 * BrowserUtilities contains common utilities for browser related operations.
 * @internal
 */
var BrowserUtilities = /** @class */ (function () {
    function BrowserUtilities() {
    }
    BrowserUtilities.isWebViewHosted = function () {
        if (typeof BrowserUtilities._isWebViewHosted === 'undefined') {
            if (!SPFlight.isEnabled(60000 /* SPTeamsEnableMobileUserAgent */)) {
                BrowserUtilities._isWebViewHosted =
                    BrowserUtilities.isMobileWebView() ||
                        BrowserUtilities.isTeamsWebViewHosted() ||
                        /[?&]env=WebView/.test(location.search);
            }
            else {
                BrowserUtilities._isWebViewHosted =
                    BrowserUtilities.isMobileWebView() ||
                        BrowserUtilities.isTeamsWebViewHosted() ||
                        BrowserUtilities.isTeamsAndroidHosted() ||
                        BrowserUtilities.isTeamsIOSHosted() ||
                        /[?&]env=WebView/.test(location.search);
            }
        }
        return BrowserUtilities._isWebViewHosted;
    };
    BrowserUtilities.isTeamsAndroidHosted = function () {
        if (typeof BrowserUtilities._isTeamsAndroid === 'undefined') {
            var ua = navigator.userAgent;
            BrowserUtilities._isTeamsAndroid =
                /* Android WebView (scoped to Microsoft Teams for now) */
                /*
                Mozilla/5.0 (Linux; Android 9; Mi A1 Build/PKQ1.180917.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/81.0.4044.117 Mobile Safari/537.36 TeamsMobile-Android
                Mozilla/5.0 (Linux; Android 9; Mi A1 Build/PKQ1.180917.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/81.0.4044.117 Mobile Safari/537.36 TeamsMobile-Android-dev
                */
                /.* TeamsMobile-Android.*/.test(ua) || /[?&]env=TeamsWebView/.test(location.search);
        }
        return BrowserUtilities._isTeamsAndroid;
    };
    BrowserUtilities.isTeamsIOSHosted = function () {
        if (typeof BrowserUtilities._isTeamsIOS === 'undefined') {
            var ua = navigator.userAgent;
            BrowserUtilities._isTeamsIOS =
                /* Electron WebView (scoped to Microsoft Teams for now) */
                /*
                Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 TeamsMobile-iOS
                Mozilla/5.0 (iPhone; CPU iPhone OS 12_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 TeamsMobile-iOS-dev
                */
                /.* TeamsMobile-iOS.*/.test(ua) || /[?&]env=TeamsWebView/.test(location.search);
        }
        return BrowserUtilities._isTeamsIOS;
    };
    BrowserUtilities.isTeamsWebViewHosted = function () {
        if (typeof BrowserUtilities._isTeamsWebView === 'undefined') {
            var ua = navigator.userAgent;
            BrowserUtilities._isTeamsWebView =
                /* Electron WebView (scoped to Microsoft Teams for now) - Desktop Client scenario */
                // tslint:disable-next-line:max-line-length
                /Teams\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+)).* Electron\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua) || /[?&]env=TeamsWebView/.test(location.search);
        }
        return BrowserUtilities._isTeamsWebView;
    };
    /**
     * When SharePoint is hosted in Teams, it can either be in :
     *    1. Teams Desktop Client: Electron Webview
     *    2. Teams in Browser: Iframe
     *
     * Desktop Client is identifiable via the user-agent.
     * However, for Teams in Browser, since we cannot leverage user-agent,
     * we'll be using window.name property to get the host iframe's name,
     * which when equal to "embedded-page-container" lets us know that
     * SharePoint is currently running in Teams in Browser.
     */
    BrowserUtilities.isTeamsBrowserHosted = function () {
        if (typeof BrowserUtilities._isTeamsBrowser === 'undefined') {
            BrowserUtilities._isTeamsBrowser = false;
            try {
                BrowserUtilities._isTeamsBrowser = window.name === BrowserUtilities._teamsBrowserWindowName;
            }
            catch (e) {
                /* no-op */
            }
        }
        return BrowserUtilities._isTeamsBrowser;
    };
    /**
     * Return true, if SharePoint is hosted in Teams, either Webview or Browser
     */
    BrowserUtilities.isTeamsHosted = function () {
        if (!SPFlight.isEnabled(60000 /* SPTeamsEnableMobileUserAgent */)) {
            return ((BrowserUtilities.isTeamsWebViewHosted() && window.name !== '') ||
                BrowserUtilities.isTeamsBrowserHosted());
        }
        return ((BrowserUtilities.isTeamsWebViewHosted() && window.name !== '') ||
            BrowserUtilities.isTeamsBrowserHosted() ||
            BrowserUtilities.isTeamsAndroidHosted() ||
            BrowserUtilities.isTeamsIOSHosted());
    };
    BrowserUtilities.isSharePointiOSApp = function () {
        if (typeof BrowserUtilities._isSharePointiOSApp === 'undefined') {
            var userAgent = navigator.userAgent;
            BrowserUtilities._isSharePointiOSApp =
                /* iOS WebView */
                /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/.test(userAgent) ||
                    BrowserUtilities._isTestMobileWebView();
            if (this._isMobileIntuneBrowser(userAgent)) {
                BrowserUtilities._isSharePointiOSApp = false;
            }
        }
        return BrowserUtilities._isSharePointiOSApp;
    };
    BrowserUtilities.isMobileWebView = function () {
        if (typeof BrowserUtilities._isMobileWebView === 'undefined') {
            var ua = navigator.userAgent;
            BrowserUtilities._isMobileWebView =
                /* iOS WebView */
                this.isSharePointiOSApp() ||
                    /* Android WebView (Lollipop+older) */
                    /(Android ).*; wv/.test(ua) ||
                    /(Android ).* Version\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua) ||
                    /* Windows WebView (C# and JavaScript-based apps) */
                    (navigator.userAgent.indexOf(BrowserUtilities._sharePointDesktopString) === -1 &&
                        (/(Windows ).*; WebView\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua) ||
                            /(Windows ).*; MSAppHost\/((?:(\d+)\.)?(?:(\d+)\.)?(?:(\d+)\.\d+))/.test(ua))) ||
                    BrowserUtilities._isTestMobileWebView();
            if (this._isMobileIntuneBrowser(navigator.userAgent)) {
                BrowserUtilities._isMobileWebView = false;
            }
        }
        return BrowserUtilities._isMobileWebView;
    };
    BrowserUtilities.isMobileBrowser = function () {
        if (typeof BrowserUtilities._isMobileBrowser === 'undefined') {
            //
            // NOTE:
            // Currently matching hosted Android WebKit, iPhone/iPod Mobile Safari and IE Mobile.
            // May be extended to cover other mobile browsers as necessary. Not a perfect science.
            //
            var authoringInTeamsEnabled = SPFlight.isEnabled(1312 /* EnableAuthoringInTeams */);
            BrowserUtilities._isMobileBrowser =
                (authoringInTeamsEnabled
                    ? BrowserUtilities.isMobileWebView() || /[?&]env=WebView/.test(location.search)
                    : BrowserUtilities.isWebViewHosted()) ||
                    /(Android|iPhone|iPod|IEMobile|BlackBerry)/.test(navigator.userAgent) ||
                    /[?&]env=Mobile/.test(location.search);
        }
        return BrowserUtilities._isMobileBrowser;
    };
    BrowserUtilities.isEmbedded = function () {
        if (typeof BrowserUtilities._isEmbedded === 'undefined') {
            if (BrowserUtilities.isWebViewHosted() || /[?&]PageVersion=[^&]/.test(location.search)) {
                BrowserUtilities._isEmbedded = true;
            }
            else if (navigator.userAgent.indexOf('ManagedBrowser') > -1) {
                BrowserUtilities._isEmbedded = false;
            }
            else {
                try {
                    var isIframeOrPhantomJS = window.parent && window.parent !== window && navigator.userAgent.indexOf('PhantomJS/') === -1;
                    BrowserUtilities._isEmbedded = isIframeOrPhantomJS || /[?&]env=Embedded/.test(location.search);
                }
                catch (e) {
                    BrowserUtilities._handleErrorForParentWindowCheck();
                }
            }
        }
        return BrowserUtilities._isEmbedded;
    };
    /**
     * Returns true if SharePoint site is embedded within site and not hosted e.g. in Teams.
     */
    BrowserUtilities.isEmbeddedInSite = function () {
        if (typeof BrowserUtilities._isEmbeddedInSite === 'undefined') {
            BrowserUtilities._isEmbeddedInSite =
                (BrowserUtilities.isEmbedded() && !BrowserUtilities.isTeamsHosted()) ||
                    BrowserUtilities.isEmbeddedInTeamsClient();
        }
        return BrowserUtilities._isEmbeddedInSite;
    };
    BrowserUtilities.supportsServiceWorker = function () {
        return BrowserUtilities._serviceWorkerProperty in navigator;
    };
    BrowserUtilities.supportsNavigationPreload = function () {
        // ServiceWorkerRegistration is available on global window object
        return (!!window.ServiceWorkerRegistration &&
            BrowserUtilities._navigationPreloadProperty in window.ServiceWorkerRegistration.prototype);
    };
    /**
     * Returns true if SharePoint site is embedded within SharePoint which is hosted in Teams client.
     * This check is not required for Teams browser because, this api needs to be used along with isTeamsHosted,
     * which will return false for browser anyway
     */
    BrowserUtilities.isEmbeddedInTeamsClient = function () {
        if (typeof BrowserUtilities._isEmbeddedInTeamsClient === 'undefined') {
            BrowserUtilities._isEmbeddedInTeamsClient = false;
            if (BrowserUtilities.isTeamsWebViewHosted()) {
                try {
                    BrowserUtilities._isEmbeddedInTeamsClient = window.name !== BrowserUtilities._teamsClientWindowName;
                }
                catch (e) {
                    /* no-op */
                }
            }
        }
        return BrowserUtilities._isEmbeddedInTeamsClient;
    };
    BrowserUtilities._isTestMobileWebView = function () {
        return /[?&]env=MobileWebView/.test(location.search);
    };
    BrowserUtilities._isMobileIntuneBrowser = function (userAgent) {
        return navigator.userAgent.indexOf('ManagedBrowser') > -1;
    };
    BrowserUtilities._handleErrorForParentWindowCheck = function () {
        //
        // Accessing window.parent x-domain throws - then window.parent !== window,
        // and we can assume we are hosted in an x-domain iframe
        //
        BrowserUtilities._isEmbedded = true;
    };
    BrowserUtilities._sharePointDesktopString = 'SharePointDesktop';
    BrowserUtilities._serviceWorkerProperty = 'serviceWorker';
    BrowserUtilities._navigationPreloadProperty = 'navigationPreload';
    BrowserUtilities._teamsBrowserWindowName = 'embedded-page-container';
    BrowserUtilities._teamsClientWindowName = 'extension-tab-frame';
    return BrowserUtilities;
}());
export { BrowserUtilities };
//# sourceMappingURL=BrowserUtilities.js.map