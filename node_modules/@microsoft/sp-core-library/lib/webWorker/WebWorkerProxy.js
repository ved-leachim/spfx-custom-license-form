import ServiceKey from '../serviceScope/ServiceKey';
/**
 * The web worker proxy is responsible for instantiating the web worker,
 * and setting up a communication channel between the main thread and the worker thread.
 *
 * @internal
 */
var WebWorkerProxy = /** @class */ (function () {
    function WebWorkerProxy() {
    }
    WebWorkerProxy.prototype.init = function (setPerformancePropertyCallback) {
        setPerformancePropertyCallback('WebWorkerProxyInitStart');
        var workerInstance = self.__spWorker;
        if (workerInstance) {
            this._worker = workerInstance;
            if (self.__spWorkerStarted) {
                this._workerStarted = self.__spWorkerStarted;
                setPerformancePropertyCallback('WebWorkerProxyInitEnd');
            }
            else {
                this._setWorkerStartedListener(setPerformancePropertyCallback);
            }
        }
        else {
            this._worker = new Worker('/_layouts/15/spwebworkerproxy.ashx?env=spfx');
            this._setWorkerStartedListener(setPerformancePropertyCallback);
        }
    };
    WebWorkerProxy.prototype._setWorkerStartedListener = function (setPerformancePropertyCallback) {
        var _this = this;
        this._worker.addEventListener('message', function (ev) {
            if (ev.data === 'SPWebWorker started.') {
                setPerformancePropertyCallback('WebWorkerProxyInitEnd');
                _this._workerStarted = true;
            }
        });
    };
    /**
     * The service key for WebWorkerProxy.
     *
     */
    WebWorkerProxy.serviceKey = ServiceKey.create('web-worker-proxy:WebWorkerProxy', WebWorkerProxy);
    return WebWorkerProxy;
}());
export { WebWorkerProxy };
//# sourceMappingURL=WebWorkerProxy.js.map